@model NIMBOLE.Models.Models.TransAccConModel
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.common.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.common-bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.mobile.all.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.dataviz.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.dataviz.bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/jszip.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.core.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.web.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.aspnetmvc.min.js")"></script>
}
<script>
    kendo.ui.ComboBox.fn.clear = kendo.ui.AutoComplete.fn.clear = function () {
        if (!!this.text) {
            this.text("");
        }
        if (!!this.value) {
            this.value(null);
        }
        this._prev = this.oldIndex = this._old = this._last = undefined;
    };
</script>

@using (Html.BeginForm("Create", "Contacts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <main id="main-container" style="padding-left:10px;padding-right:10px;padding-top:45px">

        <div class="row">
            <div class="col-lg-12">
                <div class="block block-themed">
                    <div class="block-header bg-info">
                        <ul class="block-options">
                            <li>
                                <button type="button" data-toggle="block-option" data-action="refresh_toggle" data-action-mode="demo"><i class="si si-refresh"></i></button>
                            </li>
                            <li>
                                <button type="button" data-toggle="block-option" data-action="content_toggle"></button>
                            </li>
                        </ul>
                        <h3 class="block-title">@NIMBOLE.GlobalResources.Resources.NewContact</h3>

                    </div>

                    <div class="block-content">

                        <div class="form-group">
                            @*Left Column*@
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="InputFirstName">
                                        @NIMBOLE.GlobalResources.Resources.FirstName  <span class="text-danger">*</span>
                                    </label>
                                    @Html.TextBoxFor(model => model.objContactModel.FirstName, new { @placeholder = @NIMBOLE.GlobalResources.Resources.FirstName, @class = "form-control firstAlphabetOnly", @tabindex = "1" })
                                </div>

                                <div class="form-group">
                                    <label for="InputEmail">
                                        @NIMBOLE.GlobalResources.Resources.Email @*<span class="field-validation-error">*</span>*@
                                    </label>
                                    @Html.TextBoxFor(model => model.objContactModel.ContactEmail, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Email, @class = "form-control", @tabindex = "3" })

                                </div>

                                <div class="form-group">
                                    <label for="department">
                                        @NIMBOLE.GlobalResources.Resources.Department
                                    </label>
                                    @*@Html.HiddenFor(model => model.objContactModel.DepartmentId)
                                        <select class="form-control" id="Dept" name=Dept size="1"><option value="0">@NIMBOLE.GlobalResources.Resources.Select</option></select>*@
                                    @(Html.TextBoxFor(model => model.objContactModel.DepartmentId, new { @style = "width: 100%;", @class = "form-control", @tabindex = "5" }))
                                </div>
                                <script>
                                    function BindDepartment() {
                                        $("#objContactModel_DepartmentId").kendoComboBox({
                                            dataTextField: "Name",
                                            dataValueField: "Id",
                                            dataSource: {
                                                type: "json",
                                                transport: {
                                                    read: {
                                                        url: "/Department/GetAllDepartmentsForCombo",
                                                        dataType: "json"
                                                    }
                                                }
                                            },
                                            filter: "startswith",
                                            sort: { field: "Name", dir: "asc" },
                                            change: onDepartmentChange,
                                            suggest: true
                                        });
                                    }
                                    $(document).ready(function () {
                                        BindDepartment();
                                    });
                                </script>

                                <div class="form-group">
                                    <label for="Designation">
                                        @NIMBOLE.GlobalResources.Resources.Designation
                                    </label>
                                    @*@Html.HiddenFor(model => model.objContactModel.ContactRoleId)
                                        <select class="form-control" id="controle" name=controle size="1"><option value="0">@NIMBOLE.GlobalResources.Resources.Select</option></select>*@

                                    @(Html.TextBoxFor(model => model.objTransContactModel.ContactRoleId, new { @style = "width: 100%;", @class = "form-control", @tabindex = "7" }))
                                </div>
                                <script>

                                    function BindContactRoles() {
                                        $("#objTransContactModel_ContactRoleId").kendoComboBox({
                                            dataTextField: "Name",
                                            dataValueField: "Id",
                                            @*dataSource: @Html.Raw(Json.Encode(ViewData["Designations"])),*@
                                            dataSource: {
                                                type: "json",
                                                transport: {
                                                    read: {
                                                        url: "/ContactRoles/AllContactRoleForCombo",
                                                        dataType: "json"
                                                    }
                                                }
                                            },
                                            filter: "startswith",
                                            sort: { field: "Name", dir: "asc" },
                                            change: onContactRolesChange,
                                            suggest: true
                                        });
                                    }
                                    $(document).ready(function () {
                                        BindContactRoles();
                                    });
                                </script>



                                <div class="form-group">
                                    <label for="InputStreet">
                                        @NIMBOLE.GlobalResources.Resources.Address1
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.HouseNo, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Address1, @class = "form-control", @tabindex = "9" })
                                </div>

                                <div class="form-group">
                                    <label for="InputCountry">
                                        @NIMBOLE.GlobalResources.Resources.Country
                                    </label>
                                    @Html.HiddenFor(model => model.objAddressModel.CountryId)

                                    <select class="form-control" id="Country" name="country" size="1"><option value="0" tabindex="11">@NIMBOLE.GlobalResources.Resources.Select</option> </select>
                                </div>

                                <div class="form-group">
                                    <label for="InputCity">
                                        @NIMBOLE.GlobalResources.Resources.City
                                    </label>
                                    @Html.HiddenFor(model => model.objAddressModel.CityId)
                                    <select class="form-control" id="City" name="City" size="1"><option value="0" tabindex="13">@NIMBOLE.GlobalResources.Resources.Select</option></select>
                                </div>

                                <div class="form-group">
                                    <label for="InputMobile">
                                        @NIMBOLE.GlobalResources.Resources.Mobile
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.Mobile, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Mobile, @class = "form-control", @tabindex = "15", @onkeydown = "return ValidateNumber(event);" })
                                </div>

                                <div class="form-group">
                                    <label for="InputSecondaryFax">
                                        @NIMBOLE.GlobalResources.Resources.Fax
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.Fax, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Fax, @class = "form-control", @tabindex = "17", @onkeydown = "return ValidateNumber(event);", @maxlength = 10 })
                                </div>

                                <div class="form-group">
                                    <label for="InputSkypeName">
                                        @NIMBOLE.GlobalResources.Resources.SkypeName
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.SkypeName, new { @placeholder = @NIMBOLE.GlobalResources.Resources.SkypeName, @class = "form-control", @tabindex = "19" })
                                </div>

                            </div>

                            @*Right Column*@
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="InputMiddleName">
                                        @NIMBOLE.GlobalResources.Resources.LastName
                                    </label>
                                    @Html.TextBoxFor(model => model.objContactModel.LastName, new { @placeholder = @NIMBOLE.GlobalResources.Resources.LastName, @class = "form-control", @tabindex = "2" })
                                </div>

                                <div class="form-group">
                                    <label for="InputWorkEmail">
                                        @NIMBOLE.GlobalResources.Resources.WorkEmail <span class="text-danger">*</span>
                                    </label>
                                    @Html.TextBoxFor(model => model.objContactModel.WorkEmail, new { @placeholder = @NIMBOLE.GlobalResources.Resources.WorkEmail, @class = "form-control", @tabindex = "4" })
                                </div>

                                <div class="form-group">
                                    <label for="InputLeadSource">
                                        @NIMBOLE.GlobalResources.Resources.Source
                                    </label>
                                    @*@Html.HiddenFor(model => model.objContactModel.LeadSourceId)
                                        <select class="form-control" id="LdSource" name="LdSource" size="1"><option value="0">@NIMBOLE.GlobalResources.Resources.Select</option></select>*@
                                    @(Html.TextBoxFor(model => model.objContactModel.LeadSourceId, new { @style = "width: 100%;", @class = "form-control", @tabindex = "6" }))
                                </div>
                                <script>
                                    function BindLeadSource() {
                                        $("#objContactModel_LeadSourceId").kendoComboBox({
                                            dataTextField: "Name",
                                            dataValueField: "Id",
                                            @*dataSource: @Html.Raw(Json.Encode(ViewData["LeadSources"])),*@
                                            dataSource: {
                                                type: "json",
                                                transport: {
                                                    read: {
                                                        url: "/Leadsource/GetAllLeadSourcesForCombo",
                                                        dataType: "json"
                                                    }
                                                }
                                            },
                                            filter: "startswith",
                                            sort: { field: "Name", dir: "asc" },
                                            change: onLeadSourceChange,
                                            suggest: true
                                        });
                                    }

                                    $(document).ready(function () {
                                        BindLeadSource();
                                    });
                                </script>

                                <div class="form-group">
                                    <label for="Department">
                                        @NIMBOLE.GlobalResources.Resources.Accounts <span class="text-danger">*</span>
                                    </label>
                                    @*@Html.HiddenFor(model => model.objTransContactModel.AccountId)
                                        <select class="form-control" id="AccId" name="AccId" size="1"><option value="0">@NIMBOLE.GlobalResources.Resources.Select</option></select>*@
                                    @(Html.TextBoxFor(model => model.objTransContactModel.AccountId, new { @style = "width: 100%;", @class = "form-control", @tabindex = "8" }))
                                </div>
                                <script>
                                    function BindAccount() {
                                        $("#objTransContactModel_AccountId").kendoComboBox({
                                            dataTextField: "Name",
                                            dataValueField: "Id",
                                            @*dataSource: @Html.Raw(Json.Encode(ViewData["Accounts"])),*@
                                            dataSource: {
                                                type: "json",
                                                transport: {
                                                    read: {
                                                        url: "/NimboleAccounts/GetAccountwithFilter",
                                                        dataType: "json"
                                                    }
                                                }
                                            },
                                            filter: "startswith",
                                            sort: { field: "Name", dir: "asc" },
                                            change: onAccountChange,
                                            suggest: true
                                        });
                                        return true;
                                    }
                                    $(document).ready(function () {
                                        BindAccount();
                                    });
                                </script>
                                <div class="form-group">
                                    <label for="InputHouseNo">
                                        @NIMBOLE.GlobalResources.Resources.Address2
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.StreetName, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Address2, @class = "form-control", @tabindex = "10" })
                                    @Html.HiddenFor(model => model.objAddressModel.Id)
                                </div>
                                <div class="form-group">
                                    <label for="InputState">
                                        @NIMBOLE.GlobalResources.Resources.State
                                    </label>
                                    @Html.HiddenFor(model => model.objAddressModel.StateId)
                                    <select class="form-control" id="State" name="State" size="1"><option value="0" tabindex="12">@NIMBOLE.GlobalResources.Resources.Select</option></select>
                                </div>
                                <div class="form-group">
                                    <label for="InputZip">
                                        @NIMBOLE.GlobalResources.Resources.ZipCode
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.ZipCode, new { @placeholder = @NIMBOLE.GlobalResources.Resources.ZipCode, @class = "form-control", @tabindex = "14", @onkeydown = "return ValidateNumber(event);", @maxlength = 6 })
                                </div>

                                <div class="form-group">
                                    <label for="InputPhone">
                                        @NIMBOLE.GlobalResources.Resources.OfficePhone
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.Phone, new { @placeholder = @NIMBOLE.GlobalResources.Resources.OfficePhone, @class = "form-control", @tabindex = "16", @onkeydown = "return ValidateNumber(event);" })
                                </div>

                                <div class="form-group">
                                    <label for="InputHomePhone">
                                        @NIMBOLE.GlobalResources.Resources.HomePhone
                                    </label>
                                    @Html.TextBoxFor(model => model.objAddressModel.HomePhone, new { @placeholder = @NIMBOLE.GlobalResources.Resources.HomePhone, @class = "form-control", @tabindex = "18", @onkeydown = "return ValidateNumber(event);" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 form-group">
                                    <label for="Comments">
                                        @NIMBOLE.GlobalResources.Resources.Comments
                                    </label>
                                    @Html.TextAreaFor(model => model.objContactModel.Comments, new { @class = "form-control", @style = "width:100%;height:100px;resize:none;", maxlength = 500, @tabindex = "20" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6  form-material">
                                    <label for="exampleInputPhoto">@NIMBOLE.GlobalResources.Resources.Image</label>
                                    <br />
                                    <input type="file" name="uploadFile" accept="image/*" style="display: inline;" onchange="readURL(this);" tabindex="21" />
                                </div>

                                <div id="divLogo" class="col-lg-6 form-group">
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-12" style="text-align: right;">
                                    <input id="btnSubmit" type="button" class="btn btn-success" value=@NIMBOLE.GlobalResources.Resources.Save tabindex="22">
                                    <input type="button" value=@NIMBOLE.GlobalResources.Resources.Cancel class="btn btn-danger" onclick="location.href = '/Contacts/ListviewIndex'" tabindex="23" />
                                </div>
                            </div>
                            @Html.Hidden("hdnAccount")
                            @Html.Hidden("hdnSource")
                            @Html.Hidden("hdnDepartment")
                            @Html.Hidden("hdnDesignation")
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </main>


    <script>
        $(document).ready(function () {
            //BindDepartment();
            //BindContactRoles();
            //BindLeadSource()
            //BindAccount()
            BindCountries();
        });

        //function BindDepartment() {

        //    $.ajax({
        //        type: "GET",
        //        contentType: "application/json; charset=utf-8",
        //        url: "/Department/GetAllDepartmentsForCombo",
        //        data: "{}",
        //        dataType: "json",
        //        success: function (Result) {

        //            for (var i = 0; i < Result.length; i++) {
        //                $("#Dept").append('<option value="'
        //                            + Result[i].Id + '">' +
        //                            Result[i].Name + '</option>');
        //            }
        //        },
        //        error: function (Result) {
        //            alert("error");
        //        }
        //    });
        //}

        //$("#Dept").change(function () {
        //    var value = this.value;
        //    if (value != -1 || value != '') {
        //        $('#objContactModel_DepartmentId').val(value);
        //    }
        //});

        //function BindContactRoles() {
        //    $.ajax({
        //        type: "GET",
        //        contentType: "application/json; charset=utf-8",
        //        url: "/ContactRoles/AllContactRoleForCombo",

        //        data: "{}",
        //        dataType: "json",
        //        success: function (controle) {
        //            
        //            for (var i = 0; i < controle.length; i++) {
        //                $("#controle").append('<option value="'
        //                            + controle[i].Id + '">' +
        //                            controle[i].Name + '</option>');
        //            }
        //        },
        //        error: function (controle) {
        //            alert("error");
        //        }
        //    });
        //}
        //$("#controle").change(function () {

        //    var value = this.value;
        //    if (value != -1 || value != '') {
        //        $('#objContactModel_ContactRoleId').val(value);
        //    }
        //});

        //function BindLeadSource() {
        //    $.ajax({
        //        type: "GET",
        //        contentType: "application/json; charset=utf-8",
        //        url: "/Leadsource/GetAllLeadSourcesForCombo",
        //        data: "{}",
        //        dataType: "json",
        //        success: function (LdSource) {
        //            
        //            for (var i = 0; i < LdSource.length; i++) {
        //                $("#LdSource").append('<option value="'
        //                            + LdSource[i].Id + '">' +
        //                            LdSource[i].Name + '</option>');
        //            }
        //        },
        //        error: function (LdSource) {
        //            alert("error");
        //        }
        //    });
        //}
        //$("#LdSource").change(function () {
        //    var value = this.value;
        //    if (value != -1 || value != '') {
        //        $('#objContactModel_LeadSourceId').val(parseInt(value));
        //    }
        //});

        //function BindAccount() {
        //    $.ajax({
        //        type: "GET",
        //        contentType: "application/json; charset=utf-8",
        //        url: "/NimboleAccounts/GetAllDistributorsForCombo",
        //        data: "{}",
        //        dataType: "json",
        //        success: function (AccId) {
        //            
        //            for (var i = 0; i < AccId.length; i++) {
        //                $("#AccId").append('<option value="'
        //                            + AccId[i].Id + '">' +
        //                            AccId[i].Name + '</option>');
        //            }
        //        },
        //        error: function (AccountP) {
        //            alert("error");
        //        }
        //    });
        //}
        //$("#AccId").change(function () {
        //    var value = this.value;
        //    if (value != -1 || value != '') {
        //        $('#objTransContactModel_AccountId').val(parseInt(value));
        //    }
        //});
        function BindCountries() {
            $.ajax({

                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/AddressAutoComplete/GetCountryNames",
                data: "{}",
                dataType: "json",
                success: function (Result) {
                    for (var i = 0; i < Result.length; i++) {
                        $("#Country").append('<option value="'
                                    + Result[i].CountryId + '">' +
                                    Result[i].CountryName + '</option>');
                    }
                },

                error: function (Result) {
                    alert("error");
                }
            });

        }

        $("#Country").change(function () {
            var value = this.value;
            if (value != -1 || value != '') {
                BindStates(value);
                $('#objAddressModel_CountryId').val(parseInt(value));
            }
        });
        function BindStates(countryId) {
            $('#State')
                .find('option')
                .remove()
                .end()
                .append('<option value="0">@NIMBOLE.GlobalResources.Resources.Select</option>')
            ;
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/AddressAutoComplete/GetStateNamesCreate?Countries=" + countryId,
                data: "{}",
                dataType: "json",
                success: function (Result) {
                    for (var i = 0; i < Result.length; i++) {
                        $("#State").append('<option value="'
                                    + Result[i].Id + '">' +
                                    Result[i].Name + '</option>');
                    }
                },
                error: function (Result) {
                    alert("error");
                }
            });
        } 
        $("#State").change(function () {
            var value = this.value;
            if (value != -1 || value != '' || value != "") {
                BindCities(value);
                $('#objAddressModel_StateId').val(parseInt(value));
            }
        });
        function BindCities(stateId) {
            $('#City')
              .find('option')
              .remove()
              .end()
            .append('<option value="0">@NIMBOLE.GlobalResources.Resources.Select</option>');
            $.ajax({

                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/AddressAutoComplete/GetCityNamesCreate?states=" + stateId,
                data: "{}",
                dataType: "json",
                success: function (Result) {
                    for (var i = 0; i < Result.length; i++) {
                        $("#City").append('<option value="'
                                    + Result[i].Id + '">' +
                                    Result[i].Name + '</option>');
                    }
                },
                error: function (Result) {
                    alert("error");
                }
            });
        }
        $("#City").change(function () {
            var value = this.value;
            if (value != -1 || value != '' || value != "") {
                $('#objAddressModel_CityId').val(parseInt(value));
            }
        });
    </script>
    //custom customAlert
    <script>
        //function customAlert(message, type) {
        //    $("#dialog-confirm").dialog({
        //        resizable: false,
        //        height: 140,
        //        width: "auto",
        //        modal: true,
        //        buttons: {
        //            "OK": function () {
        //                $(this).dialog("close");
        //                switch (type) {
        //                    case "dep": changeDep();
        //                        break;
        //                    case "act": accountchange();
        //                        break;
        //                    case "source": LeadSourceChange();
        //                        break;
        //                    case "Con": ContactRolesChange();
        //                        break;
        //                }
        //            },
        //            Cancel: function () {
        //                switch (type) {
        //                    case "dep":
        //                        var combobox = $("#objContactModel_DepartmentId").data("kendoComboBox");
        //                        combobox.clear();
        //                        //combobox.focus();
        //                        BindDepartment();
        //                        setTimeout(function () { combobox.focus(); }, 2000);
        //                        kendo.ui.progress(combobox.wrapper, false);
        //                        break;
        //                    case "act":
        //                        var combobox = $("#objTransContactModel_AccountId").data("kendoComboBox");
        //                        combobox.clear();
        //                        //combobox.focus();
        //                        BindAccount();
        //                        setTimeout(function () { combobox.focus(); }, 2000);
        //                        kendo.ui.progress(combobox.wrapper, false);
        //                        break;
        //                    case "source":
        //                        var combobox = $("#objContactModel_LeadSourceId").data("kendoComboBox");
        //                        combobox.clear();
        //                        //combobox.focus();
        //                        BindLeadSource();
        //                        setTimeout(function () { combobox.focus(); }, 2000);
        //                        kendo.ui.progress(combobox.wrapper, false);
        //                        break;
        //                    case "Con":
        //                        var combobox = $("#objTransContactModel_ContactRoleId").data("kendoComboBox");
        //                        combobox.clear();
        //                        // combobox.focus();
        //                        BindContactRoles();
        //                        setTimeout(function () { combobox.focus(); }, 2000);
        //                        kendo.ui.progress(combobox.wrapper, false);
        //                        break;
        //                }
        //                $(this).dialog("close");
        //            }
        //        },
        //        open: function (event, ui) {
        //            $('#dialog-confirm').attr("style", "height: auto; max-height: 62px; min-height: 62px; width: auto;");
        //            $(".ui-dialog-titlebar").hide();
        //            $('#dialogContent').text(message);
        //            if (type === "")
        //                $('.ui-dialog-buttonset')[0].children[1].hidden = true;
        //        }
        //    });
        //}
        function Dialog(message, type) {
            var message;
            swal({
                title: message,
                type: "",
                showCancelButton: true,
                confirmButtonColor: "#337ab7",
                confirmButtonText: "Ok",
                cancelButtonText: "Cancel",
                cancelButtonColor: "#d26a5c",
                showLoaderOnConfirm: false,
                closeOnConfirm: false,
            },
            function (isConfirm) {
                if (isConfirm) {
                    
                    switch (type) {
                        case "dep": changeDep();
                            break;
                        case "act": accountchange();
                            break;
                        case "source": LeadSourceChange();
                            break;
                        case "Con": ContactRolesChange();
                            break;
                        case "": //default
                            swal.close();
                            break;
                    }
                }
                else {
                    
                    switch (type) {
                        case "dep":
                            var combobox = $("#objContactModel_DepartmentId").data("kendoComboBox");
                            kendo.ui.progress(combobox.wrapper, false);
                            combobox.clear();
                            combobox.focus();
                            swal.close();
                            BindDepartment();
                            break;
                        case "act":
                            var combobox = $("#objTransContactModel_AccountId").data("kendoComboBox");
                            combobox.clear();
                            swal.close();
                            combobox.focus();
                            BindAccount();
                            kendo.ui.progress(combobox.wrapper, false);
                            break;
                        case "source":
                            var combobox = $("#objContactModel_LeadSourceId").data("kendoComboBox");
                            combobox.clear();
                            combobox.focus();
                            swal.close();
                            BindLeadSource();
                            kendo.ui.progress(combobox.wrapper, false);
                            break;
                        case "Con":
                            var combobox = $("#objTransContactModel_ContactRoleId").data("kendoComboBox");
                            combobox.clear();
                            swal.close();
                            combobox.focus();
                            BindContactRoles();
                            kendo.ui.progress(combobox.wrapper, false);
                            break;
                    }
                }
            });
        }
    </script>

    <script>
        @*$(document).ready(function () {
            $("#objTransContactModel_ContactRoleId").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
            $("#objTransContactModel_AccountId").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
            $("#objContactModel_DepartmentId").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
            $("#objContactModel_LeadSourceId").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
        });*@

        function readURL(input) {
            debugger;
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgLogo').remove();
                    var img = $('<img id="imgLogo" class="imageScale" height="99" width="150">');
                    img.attr('src', e.target.result);
                   
                    img.appendTo('#divLogo');
                }
                reader.readAsDataURL(input.files[0]);
            }
            else {
                $('#imgLogo').remove();
            }
        }
    </script>
    <script>
        function changeDep() {
            var combobox = $("#objContactModel_DepartmentId").data("kendoComboBox");
            var cb = $('#objContactModel_DepartmentId').kendoComboBox();
            $.ajax({
                url: '@Url.Action("CreateDepartment", "Department")',
                type: 'POST',
                async: false,
                data: { 'item': cb[0].value.trim() },
                success: function (data) {
                    
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "");
                        combobox.clear();
                        combobox.focus();
                        swal.close();
                    }
                    else {
                        $('#hdnDepartment').val(data.Data[data.Data.length - 1].Id);
                        swal.close();
                    }
                    BindDepartment();
                    setTimeout(function () { combobox.focus(); }, 2000);
                    kendo.ui.progress(combobox.wrapper, false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    BindDepartment();
                    kendo.ui.progress(combobox.wrapper, false);
                    Dialog(errorThrown, "");
                }
            });
        }
        function onDepartmentChange(e) {
            if (this.value() && this.selectedIndex == -1) {
                var combobox = $("#objContactModel_DepartmentId").data("kendoComboBox");
                var cb = $('#objContactModel_DepartmentId').kendoComboBox();
                kendo.ui.progress(combobox.wrapper, true);
                Dialog("Do you want to add '" + cb[0].value + "' to department?", "dep");
            }
            else {
                $('#hdnDepartment').val($("#objContactModel_DepartmentId").val());
                $('#objContactModel_DepartmentId').val($("#objContactModel_DepartmentId").val()); // added on 20th Nov 2015
            }
        }
        function onDepartmentRequestEnd(e) {
            if (e.type == "create" || e.type == "update") {
                $("#objContactModel_DepartmentId").data("kendoComboBox").dataSource.read();
            }
        }
    </script>
    //onAccountChange
    <script>
        function accountchange() {
            var combobox = $("#objTransContactModel_AccountId").data("kendoComboBox");
            var cb = $('#objTransContactModel_AccountId').kendoComboBox();
            $.ajax({
                url: '@Url.Action("CreateAccount", "NimboleAccounts")',
                type: 'POST',
                async: false,
                data: { 'item': cb[0].value.trim() },
                success: function (data) {
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "");
                        //var accountname = combobox._prev;
                        //combobox.text(accountname);
                        //combobox.focus();
                        combobox.clear();
                        combobox.focus();
                        swal.close();
                    }
                    else {
                        $('#hdnAccount').val(data.Data[data.Data.length - 1].Id);
                        swal.close();
                    }
                    BindAccount();
                    setTimeout(function () { combobox.focus(); }, 2000);
                    kendo.ui.progress(combobox.wrapper, false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    BindAccount();
                    kendo.ui.progress(combobox.wrapper, false);
                    Dialog(errorThrown, "");
                }
            });
        }
        function onAccountChange(e) {
            if (this.value() && this.selectedIndex == -1) {
                var combobox = $("#objTransContactModel_AccountId").data("kendoComboBox");
                var cb = $('#objTransContactModel_AccountId').kendoComboBox();
                kendo.ui.progress(combobox.wrapper, true);
                if (Dialog("Do you want to add '" + cb[0].value + "' to account?", "act")) {
                }
                else {
                    $('#hdnAccount').val($("#objTransContactModel_AccountId").val());
                    $('#objTransContactModel_AccountId').val($("#objTransContactModel_AccountId").val()); // added on 20th Nov 2015
                }
            }
        }
        function onAccountsRequestEnd(e) {
            if (e.type == "create" || e.type == "update") {
                $("#objTransContactModel_AccountId").data("kendoComboBox").dataSource.read();
            }
        }

    </script>
    // onLeadSourceChange
    <script>
        function LeadSourceChange() {
            var combobox = $("#objContactModel_LeadSourceId").data("kendoComboBox");
            var cb = $('#objContactModel_LeadSourceId').kendoComboBox();
            $.ajax({
                url: '@Url.Action("CreateLeadSource", "LeadSource")',
                type: 'POST',
                async: false,
                data: { 'item': cb[0].value.trim() },
                success: function (data) {
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "");
                        combobox.clear();
                        combobox.focus();
                        swal.close();
                    }
                    else {
                        $('#hdnSource').val(data.Data[data.Data.length - 1].Id);
                        swal.close();
                    }
                    BindLeadSource();
                    setTimeout(function () { combobox.focus(); }, 2000);
                    kendo.ui.progress(combobox.wrapper, false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    BindLeadSource();
                    kendo.ui.progress(combobox.wrapper, false);
                    Dialog(errorThrown, "");
                }
            });
        }
        function onLeadSourceChange(e) {
            if (this.value() && this.selectedIndex == -1) {
                var combobox = $("#objContactModel_LeadSourceId").data("kendoComboBox");
                var cb = $('#objContactModel_LeadSourceId').kendoComboBox();
                kendo.ui.progress(combobox.wrapper, true);
                if (Dialog("Do you want to add '" + cb[0].value + "' to source?", "source")) {
                }
                else {
                    $('#hdnSource').val($("#objContactModel_LeadSourceId").val());
                    $('#objContactModel_LeadSourceId').val($("#objContactModel_LeadSourceId").val()); // added on 20th Nov 2015
                }
            }
        }
        function onLeadSourceRequestEnd(e) {
            if (e.type == "create" || e.type == "update") {
                $("#objContactModel_LeadSourceId").data("kendoComboBox").dataSource.read();
            }
        }
    </script>
    //onContactRolesChange
    <script>
        function ContactRolesChange() {
            var combobox = $("#objTransContactModel_ContactRoleId").data("kendoComboBox");
            var cb = $('#objTransContactModel_ContactRoleId').kendoComboBox();
            $.ajax({
                @*url: '@Url.Action("CreateLeadContactRole", "ContactRoles")',*@
                url: '@Url.Action("CreateContactRole", "ContactRoles")',
                type: 'POST',
                async: false,
                data: { 'item': cb[0].value.trim() },
                success: function (data) {
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "");
                        combobox.clear();
                        swal.close();
                        combobox.focus();
                    }
                    else {
                        $('#hdnDesignation').val(data.Data[data.Data.length - 1].Id);
                        swal.close();
                    }
                    BindContactRoles();
                    setTimeout(function () { combobox.focus(); }, 2000);
                    kendo.ui.progress(combobox.wrapper, false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    BindContactRoles();
                    kendo.ui.progress(combobox.wrapper, false);
                    Dialog(errorThrown, "");
                }
            });
        }
        function onContactRolesChange(e) {

            if (this.value() && this.selectedIndex == -1) {
                var combobox = $("#objTransContactModel_ContactRoleId").data("kendoComboBox");
                var cb = $('#objTransContactModel_ContactRoleId').kendoComboBox();
                kendo.ui.progress(combobox.wrapper, true);
                if (Dialog("Do you want to add '" + cb[0].value + "' to designation?", "Con")) {
                }
                else {
                    $('#hdnDesignation').val($("#objTransContactModel_ContactRoleId").val());
                    $('#objTransContactModel_ContactRoleId').val($("#objTransContactModel_ContactRoleId").val()); // added on 20th Nov 2015
                }
            }
        }
        function onContactRolesRequestEnd(e) {
            if (e.type == "create" || e.type == "update") {
                $("#objTransContactModel_ContactRoleId").data("kendoComboBox").dataSource.read();
            }
        }
    </script>



    <script>
        var listcontrols = {
            "objContactModel_FirstName": "true,allcharacters,1,100"
            , "objTransContactModel_AccountId": "true,select"
            , "objContactModel_ContactEmail": "false,email"
             , "objContactModel_WorkEmail": "true,email"
            , "objAddressModel_ZipCode": "false,zipcode,6,6"
            //, "objAddressModel_Phone": "false,mobile"
            //, "objAddressModel_HomePhone": "false,mobile"
            //, "objAddressModel_Mobile": "false,mobile,10,10"
            //, "objAddressModel_Fax": "false,mobile,10,10"

            , "objContactModel_LastName": "false,characters,1,100"
            , "objAddressModel_HouseNo": "false,allcharacters,1,100"
            , "objAddressModel_StreetName": "false,allcharacters,1,100"
            , "objAddressModel_SkypeName": "false,allcharacters,1,100"

        };
        $(document).ready(function () {
            $('#btnSubmit').click(function (e) {
                if (listcontrols) {
                    var flag = 0;
                    var texttype = "";
                    $.each(listcontrols, function (key, value) {

                        texttype = value.split(',')[1];
                        var element = $('#' + key);
                        if (texttype == "select") {
                            if (typeof element.prev().attr('style') !== typeof undefined) {
                                element.prev().removeAttr("style");
                            }
                        }
                        if (validateControl(key, value.split(',')[0], value.split(',')[1], value.split(',')[2], value.split(',')[3]) == false) {
                            flag = flag + 1;
                        }
                    });
                    $('#objTransContactModel_AccountId').attr("style", "width:100%;display:none;");
                    if (flag != 0) {
                        this.disabled = false;
                        return false;
                    }
                    else {
                        this.disabled = true;
                        $('form')[0].submit();
                    }
                }
            });
        });
    </script>

}
