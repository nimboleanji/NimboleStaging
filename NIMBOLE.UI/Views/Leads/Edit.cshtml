@model NIMBOLE.Models.Models.LeadNewModel
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //long iLeadId = Convert.ToInt64(Session["CurrentLeadId"] != null ? Convert.ToInt64(Session["CurrentLeadId"]) : 0);
    string DateFormat = System.Web.HttpContext.Current.Session["DateFormat"] != null ? Session["DateFormat"].ToString() : "";
    string currency = System.Web.HttpContext.Current.Session["Currency"] != null ? Session["Currency"].ToString() : "";
    //ViewData["LeadBudget"] = Model.Budget == null ? 0 : Model.Budget;
    var EmployeeRole = System.Web.HttpContext.Current.Session["EmployeeRole"] != null ? Session["EmployeeRole"].ToString() : "";
    var Milestone = string.IsNullOrEmpty(Model.LeadStatus) ? Session["DefaultMilestone"].ToString() != null ? Session["DefaultMilestone"].ToString() : "" : Model.LeadStatus;
}
@{
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.common.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.common-bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.mobile.all.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.dataviz.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.dataviz.bootstrap.min.css")" rel="stylesheet" type="text/css" />
    @*<script src="@Url.Content("~/Scripts/kendo/2014.3.1411/jszip.min.js")"></script>*@
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.core.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.web.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.aspnetmvc.min.js")"></script>
}
<style>
    .file-icon {
        display: inline-block;
        float: left;
        width: 48px;
        height: 48px;
    }
    .img-file {
        background-image: url(../content/images/jpg.png);
    }
    .doc-file {
        background-image: url(../content/images/doc.png);
    }
    .pdf-file {
        background-image: url(../content/images/pdf.png);
    }
    .xls-file {
        background-image: url(../content/images/xls.png);
    }
    .zip-file {
        background-image: url(../content/images/zip.png);
    }
    .default-file {
        background-image: url(../content/images/default.png);
    }
    #example .file-heading {
        font-family: Arial;
        font-size: 1.1em;
        display: inline-block;
        float: left;
        width: 450px;
        margin: 0 0 0 20px;
        height: 25px;
        -ms-text-overflow: ellipsis;
        -o-text-overflow: ellipsis;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
    }
    #example .file-name-heading {
        font-weight: bold;
    }
    #example .file-size-heading {
        font-weight: normal;
        font-style: italic;
    }
    div.k-dropzone {
        width: 250px;
        height: 24px;
    }
    .k-grid tbody button.k-button-bare {
        min-width: 20px;
    }
    li.k-file .file-wrapper .k-upload-action {
        position: inherit;
        right: -72px;
        color: red;
        height: 24px;
        border: 2px solid red;
    }
    li.k-file div.file-wrapper {
        position: relative;
        /*height: 50px;*/
        height: auto;
    }
    .file-wrapper > h6 {
        padding-left: 20px;
    }
    .file-wrapper > h4 {
        padding-left: 15px;
    }
    .k-file-success .k-progress {
        background-color: green;
    }
    .k-dropzone .k-upload-status {
        color: green;
    }
</style>

@{
    var documentName = string.Empty;
    var documentUrl = string.Empty;
}

<script>
    var _contactId = 0;
    var _roleId = 0;
    var contactEmail = "";
    var workEmail = "";
    var Changed = false;
    var dirtyFlag = false;
    var productsDirtyFlag = false;
    var contacts;
    var leadId = 0;

    var _productId = 0;
    var _comp1productId = 0;
    var _comp2productId = 0;
    var _comp3productId = 0;

    kendo.ui.ComboBox.fn.clear = kendo.ui.AutoComplete.fn.clear = function () {
        if (!!this.text) {
            this.text("");
        }
        if (!!this.value) {
            this.value(null);
        }
        this._prev = this.oldIndex = this._old = this._last = undefined;
    };
</script>
<script>
    $(document).ready(function (e) {
        var qry = getParameterByName('q').toString().replace(' ', '+');
        var decryptedId = SubmitDecry(qry);
        var value = $.isNumeric(decryptedId);
        if (value == false) {
            if (isNaN(decryptedId))
                qry = decryptedId.split("=")[1];
        }
        else {
            qry = decryptedId;
        }
        leadId = parseInt(qry);
    });

</script>

@using (Html.BeginForm("Edit", "Leads", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <main id="main-container" style="padding-left:10px;padding-right:10px;padding-top:45px">

        <div class="col-lg-12">
            <div class="block block-themed">
                <div class="block-header bg-info">
                    <ul class="block-options">
                        <li>
                            <button type="button" data-toggle="block-option" data-action="refresh_toggle" data-action-mode="demo"><i class="si si-refresh"></i></button>
                        </li>
                        <li>
                            <button type="button" data-toggle="block-option" data-action="content_toggle"></button>
                        </li>
                    </ul>
                    <h3 class="block-title">@NIMBOLE.GlobalResources.Resources.EditLead</h3>
                </div>

                <div class="block-content">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.LeadOwnerId)
                        @*Left Column*@
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="InputLeadTitle">
                                    @NIMBOLE.GlobalResources.Resources.Title <span class="field-validation-error">*</span>
                                </label>
                                @Html.TextBoxFor(model => model.LeadTitle, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Title, @class = "form-control", @tabindex = "1", @readonly = "readonly" })
                            </div>

                            <div class="form-group">
                                <label for="InputLeadSource">
                                    @NIMBOLE.GlobalResources.Resources.LeadSource <span class="field-validation-error">*</span>
                                </label>
                                @Html.HiddenFor(model => model.LeadSourceId)
                                @(Html.TextBox("LeadSource", "", new { @placeholder = @NIMBOLE.GlobalResources.Resources.SelectOrAdd, @style = "width: 100%;", @class = "form-control", @tabindex = "3", @readonly = "readonly" }))
                            </div>
                            <script>
                                function onLeadSourceDataBound() {
                                    if (this._selectedValue === undefined) {
                                        var combo = $("#LeadSource").data("kendoComboBox");
                                        combo.value('@Model.LeadSourceId' != 0 || '@Model.LeadSourceId' != null ? '@Model.LeadSourceId' : "");
                                    }
                                }
                                function BindLeadSource() {
                                    $("#LeadSource").kendoComboBox({
                                        dataTextField: "Name",
                                        dataValueField: "Id",
                                        dataSource: {
                                            type: "json",
                                            transport: {
                                                read: {
                                                    url: "/Leadsource/GetAllLeadSourcesForCombo",
                                                    dataType: "json"
                                                }
                                            }
                                        },
                                        sort: { field: "Name", dir: "asc" },
                                        filter: "startswith",
                                        dataBound: onLeadSourceDataBound,
                                        suggest: true
                                    });
                                }
                                $(document).ready(function () {
                                    BindLeadSource();
                                    $('#LeadSource').attr("disabled", true);
                                });
                            </script>

                            <div class="form-group">
                                <label for="InputLeadBudget">
                                    @NIMBOLE.GlobalResources.Resources.Budget (@currency)
                                </label>
                                @Html.TextBoxFor(model => model.Budget, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Budget, @class = "form-control nimbolenumbers", @tabindex = "5", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                <label for="InputLeadMilestone">
                                    @NIMBOLE.GlobalResources.Resources.LeadMilestone
                                </label>

                                @(Html.Kendo().DropDownListFor(model => model.LeadStatus)
                                    .HtmlAttributes(new { @style = "width: 100%;", @tabindex = "7" })
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .OptionLabel(@NIMBOLE.GlobalResources.Resources.Select)
                                    .AutoBind(true)
                                    .BindTo(ViewData["SelectMilestones"] as SelectList)
                                    .Value(Milestone)
                                )
                            </div>
                            <script>
                                $("#LeadStatus").change(function () {
                                    var ddlMilestone = $("#LeadStatus").data("kendoDropDownList");
                                    var slectedIndex = ddlMilestone.select();
                                    var ddldata = ddlMilestone.dataSource.data();
                                    var msorder = ddldata[slectedIndex - 1].MSOrder;

                                    $.ajax({
                                        url: '@Url.Action("GetAllMileStones", "Leads")',
                                        type: 'GET',
                                        async: false,
                                        success: function (data) {
                                            msorder = (data[slectedIndex - 1].MSOrder);

                                            if (msorder != '0' && msorder != undefined) {
                                                $('input[type=radio][name=SelectedModule').each(function () {
                                                    $(this).prop("checked", false);
                                                });
                                                $('#' + msorder).prop("checked", true);
                                                $('#LeadStage').val(msorder);
                                            }
                                            else {
                                                $('input[type=radio][name=SelectedModule').each(function () {
                                                    $(this).prop("checked", false);
                                                    $('#LeadStage').val("");
                                                });
                                            }
                                        },
                                        error: function () {
                                            Dialog('Error occured', "", e);
                                        }
                                    });
                                });
                            </script>

                            <div class="form-group">
                                <label for="InputLeadLocation">
                                    @NIMBOLE.GlobalResources.Resources.Location
                                </label>
                                @Html.TextBoxFor(model => model.Location, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Location, @class = "form-control firstAlphabetOnly firstalphahyphen", @tabindex = "9" })
                            </div>
                            <div class="form-group">
                                <label>
                                    @NIMBOLE.GlobalResources.Resources.Employee
                                </label>
                                @(Html.Kendo().MultiSelectFor(model => model.LeadEmployees)
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .Placeholder("Select - (MultiSelect)")
                                    .HtmlAttributes(new { @style = "width:100%", @tabindex = 11 })
                                    .AutoBind(true)
                                    .BindTo(ViewData["SelectEmployees"] as SelectList)
                                )
                            </div>
                            <div class="form-group">
                                <label for="InputLeadStatus">
                                    @NIMBOLE.GlobalResources.Resources.Status
                                </label>
                                <div class="row">
                                    <div class="col-lg-2 form-group">
                                        @Html.CheckBoxFor(model => model.Status, new { @tabindex = "19" })
                                    </div>
                                    <label>
                                        @NIMBOLE.GlobalResources.Resources.ActiveInactive
                                    </label>
                                </div>
                            </div>
                        </div>

                        @*Right Column*@
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="InputLeadDescription">
                                    @NIMBOLE.GlobalResources.Resources.LeadDescription
                                </label>
                                @Html.TextBoxFor(model => model.LeadDescription, new { @placeholder = @NIMBOLE.GlobalResources.Resources.LeadDescription, @class = "form-control", @tabindex = "2", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                <label for=" InputType">
                                    @NIMBOLE.GlobalResources.Resources.LeadType
                                </label>
                                @Html.TextBoxFor(model => model.LeadType, new { @placeholder = @NIMBOLE.GlobalResources.Resources.LeadType, @class = "form-control firstAlphabetOnly firstalphahyphen", @tabindex = "4" })
                            </div>
                            <div class="form-group">
                                <label for="InputAccount">
                                    @NIMBOLE.GlobalResources.Resources.Accounts <span class="field-validation-error">*</span>
                                </label>
                                @Html.HiddenFor(model => model.AccountId)
                                @(Html.TextBox("Account", "", new { @placeholder = @NIMBOLE.GlobalResources.Resources.SelectOrAdd, @style = "width: 100%;", @class = "form-control", @tabindex = "6" }))
                            </div>
                            <script>
                                function onAccountDataBound() {
                                    if (this._selectedValue === undefined) {
                                        var combo = $("#Account").data("kendoComboBox");
                                        combo.value('@Model.AccountId' != 0 ? '@Model.AccountId' : "");
                                    }
                                }
                                function BindAccount() {
                                    $("#Account").kendoComboBox({
                                        dataTextField: "Name",
                                        dataValueField: "Id",
                                        dataSource: {
                                            type: "json",
                                            transport: {
                                                read: {
                                                    url: "/NimboleAccounts/GetAccountwithFilter",
                                                    dataType: "json"
                                                }
                                            }
                                        },
                                        sort: { field: "Name", dir: "asc" },
                                        filter: "startswith",
                                        dataBound: onAccountDataBound,
                                        suggest: true
                                    });
                                }
                                $(document).ready(function () {
                                    $('#Account').attr("disabled", true);
                                    BindAccount();
                                });
                            </script>

                            <div class="form-group">
                                <label for="InputTimeFrame">
                                    @NIMBOLE.GlobalResources.Resources.TimeFrame
                                </label>
                                @(Html.Kendo().DropDownListFor(model => model.TimeFrame)
                                        .HtmlAttributes(new { @style = "width: 100%;", @tabindex = "8" })
                                        .DataTextField("Text")
                                        .DataValueField("Value")
                                        .OptionLabel(@NIMBOLE.GlobalResources.Resources.Select)
                                        .AutoBind(true)
                                        .BindTo(new List<SelectListItem>() {
                                             new SelectListItem() {
                                              Text = "<1 Month",
                                              Value = "0"
                                          },
                                          new SelectListItem()
                                          {
                                              Text = "1 Month",
                                              Value = "1"
                                          }
                                          ,
                                          new SelectListItem()
                                          {
                                              Text = "2 Month",
                                              Value = "2"
                                          }
                                          ,
                                          new SelectListItem()
                                          {
                                              Text = "3 Month",
                                              Value = "3"
                                          }
                                          ,
                                          new SelectListItem()
                                          {
                                              Text = "4 Month",
                                              Value = "4"
                                          }
                                          ,
                                          new SelectListItem()
                                          {
                                              Text = "5 Month",
                                              Value = "5"
                                          }
                                      })
                                )
                            </div>
                            <div class="form-group">
                                <label for="InputSize">
                                    @NIMBOLE.GlobalResources.Resources.Value (@currency)
                                </label>
                                @Html.TextBoxFor(model => model.Size, new { @placeholder = @NIMBOLE.GlobalResources.Resources.Value, @class = "form-control", @tabindex = "10", @readonly = "readonly" })
                            </div>
                            <div class="row">
                                @Html.HiddenFor(m => m.LeadStage)
                                <div class="col-lg-12">
                                    @{
    if (EmployeeRole == "Admin")
    {
        <div id="divStages" class="form-group" tabindex="12">
        </div>
    }
                                    }
                                </div>
                            </div>
                            <script>
                                $(document).ready(function () {
                                    var url = '/MilestoneStages/GetMilestoneStageList';
                                    $.getJSON(url, function (data) {
                                        $.each(data, function (key, val) {
                                            if ($('#LeadStage').val() > 0) {
                                                if (val.Id == $('#LeadStage').val()) {
                                                    var user = "<label style='width:30%;'><input type='radio' id='" + val.Id + "' onClick='javascript:checkboxClick(this)' name='SelectedModule' value='" + val.Id + "' checked> " + val.MileStoneStage + " </input></label>"
                                                    $('#divStages').append(user);
                                                }
                                                else {
                                                    var user = "<label style='width:30%;'><input type='radio' id='" + val.Id + "' onClick='javascript:checkboxClick(this)' name='SelectedModule' value='" + val.Id + "'> " + val.MileStoneStage + " </input></label>"
                                                    $('#divStages').append(user);
                                                }
                                            }
                                            else {
                                                if (val.Id == '@Model.MileStoneStage') {
                                                    var user = "<label style='width:30%;'><input type='radio' id='" + val.Id + "' onClick='javascript:checkboxClick(this)' name='SelectedModule' value='" + val.Id + "' checked> " + val.MileStoneStage + " </input></label>"
                                                    $('#divStages').append(user);
                                                }
                                                else {
                                                    var user = "<label style='width:30%;'><input type='radio' id='" + val.Id + "' onClick='javascript:checkboxClick(this)' name='SelectedModule' value='" + val.Id + "'> " + val.MileStoneStage + " </input></label>"
                                                    $('#divStages').append(user);
                                                }
                                            }
                                        });
                                    });
                                });
                                function checkboxClick(e) {
                                    var $box = $(e);
                                    if ($box.is(":checked")) {
                                        var group = "input:radio[name='" + $box.attr("name") + "']";
                                        $(group).prop("checked", false);
                                        $box.prop("checked", true);
                                        $('#LeadStage').val(e.value);
                                    } else {
                                        $box.prop("checked", false);
                                        $('#LeadStage').val(0);
                                    }
                                }
                            </script>
                        </div>

                        <br />
                        <div class="row">
                            <input type="hidden" id="txtHdnProdId" name="txtHdnProdId" value="" />
                            <div class="col-lg-12">
                                <div id="divProductCollapsable">
                                    @(Html.Kendo().PanelBar()
                            .Name("PanelbarProducts")
                            .ExpandMode(PanelBarExpandMode.Single)
                            .Items(panelbar =>
                            {
                                panelbar.Add().Text(@NIMBOLE.GlobalResources.Resources.Products)
                                    .Expanded(true)
                                .Content(@<text>
                                        <div class="dataTable_wrapper">
                                            @(Html.Kendo().Grid<NIMBOLE.Models.Models.TranLeadProdCompModel>()
                                            .Name("GridLeadProducts")
                                            .Columns(columns =>
                                            {
                                                columns.Bound(m => m.ProdId).Title(@NIMBOLE.GlobalResources.Resources.Id).Hidden();
                                                columns.Bound(m => m.ProductType).Title(@NIMBOLE.GlobalResources.Resources.ProductType).EditorTemplateName("ProductTypeAutocomplete").Width(150);
                                                columns.Bound(m => m.ProductName).Title(@NIMBOLE.GlobalResources.Resources.Name).EditorTemplateName("ProductNameAutocomplete").Width(150);
                                                columns.Bound(m => m.Price).Title(@NIMBOLE.GlobalResources.Resources.Price).Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;", @onkeydown = "return ValidateDecimal(event);" }).Width(100);
                                                columns.Bound(m => m.Quantity).Title(@NIMBOLE.GlobalResources.Resources.Quantity).HtmlAttributes(new { @style = "text-align: right;" }).Width(100);
                                                columns.Bound(m => m.DiscountType).Title(@NIMBOLE.GlobalResources.Resources.DiscountType).EditorTemplateName("DiscountType").Width(110);
                                                columns.Bound(m => m.Discount).Title(@NIMBOLE.GlobalResources.Resources.Discount).Width(100);
                                                columns.Bound(m => m.Amount).Title(@NIMBOLE.GlobalResources.Resources.Amount).ClientFooterTemplate("<input type='hidden' id='hdnSize' value='#=sum#'/> <div id='divGrandTotal' class=aright>" + currency + " #= kendo.format('{0:N}', sum)#" + " </div>").Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;", @readonly = "readonly" }).Width(120);
                                                columns.Group(grp => grp.Title(@NIMBOLE.GlobalResources.Resources.Competitor1).HeaderHtmlAttributes(new { style = "text-align:center;" }).Columns(info =>
                                                    {
                                                        info.Bound(m => m.Comp1Name).Title(@NIMBOLE.GlobalResources.Resources.Name).EditorTemplateName("Competitor1AutoComplete").Width(100);
                                                        info.Bound(m => m.Comp1Price).Title(@NIMBOLE.GlobalResources.Resources.Price).Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;", @onkeydown = "return ValidateDecimal(event);" }).Width(100);
                                                    })
                                                );
                                                columns.Bound(m => m.LeadValue).Hidden();
                                                columns.Bound(m => m.TempTransactionType).Hidden();
                                                columns.Command(command => { command.Edit().Text(" ").UpdateText(" ").CancelText(" ").HtmlAttributes(new { onclick = "onProductCommandClick(this)" }); command.Destroy().Text(" "); }).Title(@NIMBOLE.GlobalResources.Resources.Actions).Width(120);
                                            })
                                            .ToolBar(toolbar => toolbar.Create().Text(@NIMBOLE.GlobalResources.Resources.Add).HtmlAttributes(new { id = "customProdCompCommand" }))
                                                    .Editable(editable => { editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false); })
                                            .Events(e => { e.DataBound("onLeadProductsDataBound"); e.Remove("OnDeleteLeadProduct").Save("onSaveProduct"); })
                                            .Pageable()
                                            .Scrollable(e => e.Enabled(true).Height("100%"))
                                            .AutoBind(true)
                                            .DataSource(
                                                dataSource => dataSource
                                                .Ajax()
                                                .Aggregates(a => a.Add(m => m.Amount).Sum())
                                                .PageSize(5)
                                                .ServerOperation(false)
                                                .Events(events =>
                                                {
                                                    events.Error("error_handler");
                                                    events.RequestEnd("onRequestEnd");
                                                })
                                                .Model(model =>
                                                {
                                                    model.Id(m => m.Prod.Id);
                                                    model.Field(m => m.Quantity).DefaultValue(1);
                                                })
                                                        .Create(e => e.Action("Create", "LeadProducts").Data("BindLeadId"))
                                                        .Read(e => e.Action("LeadProducts_Read", "LeadProducts").Data("BindLeadId"))
                                                        .Update(e => e.Action("Edit", "LeadProducts"))
                                                    //.Data("BindLeadId"))
                                                .Destroy(e => e.Action("Delete", "LeadProducts"))

                                            )
                                            )
                                        </div>
                                </text>);
                            })
                                    )
                                </div>
                            </div>
                            <script>
                                function BindLeadId() {
                                    return { leadId: leadId };
                                }
                                function onProductCommandClick(e) {
                                    $(".k-grid-toolbar #customProdCompCommand").hide();
                                    e.setAttribute("style", "pointer-events:none");
                                    var grid = $("#GridLeadProducts").data("kendoGrid");
                                    kendo.ui.progress(grid.wrapper, true);
                                    $(".k-grid-toolbar #GridLeadProducts").hide();
                                    if (e.className.toString().split(' ').indexOf("k-grid-edit") > -1) {
                                        var ProductType = e.parentElement.parentElement.children[1].innerHTML;
                                        var ProductName = e.parentElement.parentElement.children[1].nextElementSibling.innerHTML;
                                        grid.tbody.find("tr[role='row']").each(function () {
                                            if (this.children[1].innerHTML == ProductType && this.children[1].nextElementSibling.innerHTML == ProductName) {
                                            }
                                            else {
                                                $(this).find(".k-grid-edit").remove();
                                                $(this).find(".k-grid-delete").remove();
                                            }
                                            grid.pager.element.hide();
                                        });
                                        $("#GridLeadProducts .k-add-button").addClass("k-state-disabled").removeClass("k-grid-add").hide();
                                        setTimeout(function () {
                                            var model = grid.editable.options.model;
                                            BindProductTypes();
                                            var types = model.Prod.ProductType;
                                            BindProducts(types);
                                            BindComp1(types);
                                            var model = grid.editable.options.model;
                                            var dropdownlist = $("#DiscountType_DiscountType").data("kendoDropDownList");
                                            dropdownlist.text(model.DiscountType != 0 ? model.DiscountType : "Select");
                                            var productname = $("#ProductName_ProductName").data("kendoComboBox");
                                            productname.text(model.ProductName);
                                            var producttype = $("#ProductType_ProductType").data("kendoComboBox");
                                            producttype.text(model.ProductType);
                                            var Comp1Name = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                                            Comp1Name.text(model.Comp1Name);
                                            $("#Comp1Name_Comp1Name").val(model.Comp1Name);
                                            $("#ProductType_ProductType").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                            $("#ProductName_ProductName").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                            $("#Comp1Name_Comp1Name").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                            $("#Quantity,#Price,#Discount,#ProductName_ProductName,#DiscountType_DiscountType,#ProductType_ProductType").attr("onChange", "QuantityChange();");
                                            $("#Comp1Price").attr("onChange", "Comp1PriceChange();");
                                            model.Comp1Name = $("#Comp1Name_Comp1Name").val();
                                            $('#Price').attr("type", "number");
                                            $("#Comp1Price").attr("type", "number");
                                            $("#Comp1Price").attr("min", "0").attr("max", "9999999999").attr("maxlength", "10");
                                            $("#Quantity").attr("min", "1").attr("max", "9999").attr("maxlength", "4");
                                            $("#Price").attr("min", "1").attr("max", "9999999999").attr("maxlength", "10");
                                            model.Amt = $('#Amount').val();
                                            $('#Amount').val(model.Amt).attr("readonly", "readonly").attr("class", "form-control k-textbox");
                                            kendo.ui.progress(grid.wrapper, false);
                                        }, 1000);
                                    }
                                    else if (e.className.toString().split(' ').indexOf("k-grid-cancel") > -1) {
                                        grid.dataSource.read();
                                        grid.pager.element.show();
                                        kendo.ui.progress(grid.wrapper, false);
                                    }
                                    else if (e.className.toString().split(' ').indexOf("k-grid-update") > -1) {

                                        var data = grid.dataSource.data();
                                        for (var i = 0; i < data.length; i++) {
                                            if (!productsDirtyFlag)
                                                productsDirtyFlag = data[i].dirty;
                                        }
                                        if (productsDirtyFlag) {
                                            var model = grid.editable.options.model;
                                            var Comp1Name = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                                            Comp1Name.text(model.Comp1Name);
                                            var prodName = $("#ProductName_ProductName").data("kendoComboBox").input.val();
                                            var price = $('#Price').val();
                                            var prodType = $("#ProductType_ProductType").data("kendoComboBox").input.val();
                                            if (prodName === "" || prodType === "") {
                                                e.preventDefault;
                                                if (prodType === "") {
                                                    Dialog("Please select(input) product type", "");
                                                    e.setAttribute("style", "");
                                                    $("#ProductType_ProductType").attr("required", "required");
                                                }
                                                else {
                                                    Dialog("Please select(input) product name", "");
                                                    e.setAttribute("style", "");
                                                    $("#ProductName_ProductName").attr("required", "required");
                                                    $("#ProductName_ProductName").data("kendoComboBox").enable(true);
                                                    $("#Comp1Name_Comp1Name").data("kendoComboBox").enable(true);
                                                }
                                            }
                                            else if (price == "" || price == "0") {
                                                e.preventDefault;
                                                Dialog("Price should be greater than or equal to 1", "", e);
                                                $("#Price").attr("required", "required");
                                            }
                                            var Qty = $('#Quantity').val();
                                            var amt = price * Qty;
                                            var Dis = $('#Discount').val();
                                            var discountType = $('#DiscountType_DiscountType').val();
                                            var prodCode = $.trim($("#ProductCode").val());
                                            $("#ProductCode").val(prodCode);
                                            var price1 = parseFloat(price);
                                            var discount = parseFloat(Dis);
                                            if (discountType == "1") {
                                                if (amt <= discount) {
                                                    //model.Discount = 0;
                                                    model.TempTransactionType = "Prevented";
                                                    $('#DiscountType_DiscountType').data("kendoDropDownList").text("");
                                                    e.preventDefault;
                                                    Dialog("Discount should be less than amount.", "", e);
                                                    var damount = $('#Amount').val();
                                                    if (damount <= 0) {
                                                        e.preventDefault;
                                                        $('#Discount').val(" ");
                                                        var money = $("#Amount").val();
                                                        if (money <= 0) {
                                                            e.preventDefault;
                                                            e.setAttribute("style", "");
                                                            $("#Amount").val(amt);
                                                            $('#DiscountType_DiscountType').data("kendoDropDownList").text('@NIMBOLE.GlobalResources.Resources.Select');
                                                        }
                                                    }
                                                }
                                                else {
                                                    amt = (amt - Dis);
                                                    model.Amount = amt;
                                                    model.DiscountType = $('#DiscountType_DiscountType').data("kendoDropDownList").text() === '@NIMBOLE.GlobalResources.Resources.Select' ? "" : $('#DiscountType_DiscountType').data("kendoDropDownList").text();
                                                }
                                            }
                                            else if (discountType == "2") {
                                                if (discount >= 100) {
                                                    //model.Discount = 0;
                                                    model.TempTransactionType = "Prevented";
                                                    $('#DiscountType_DiscountType').data("kendoDropDownList").text("");
                                                    e.preventDefault;
                                                    Dialog("Discount percent should be less than 100%.", "", "e");
                                                    var damount = $('#Amount').val();
                                                    if (damount <= 0) {
                                                        e.preventDefault;
                                                        $('#Discount').val(" ");
                                                        var money = $("#Amount").val();
                                                        if (money <= 0) {
                                                            e.preventDefault;
                                                            e.setAttribute("style", "");
                                                            $("#Amount").val(amt);
                                                            $('#DiscountType_DiscountType').data("kendoDropDownList").text('@NIMBOLE.GlobalResources.Resources.Select');
                                                        }
                                                    }
                                                }
                                                else {
                                                    amt = (amt - (amt * Dis / 100));
                                                    model.Amount = amt;
                                                    model.DiscountType = $('#DiscountType_DiscountType').data("kendoDropDownList").text() === '@NIMBOLE.GlobalResources.Resources.Select' ? "" : $('#DiscountType_DiscountType').data("kendoDropDownList").text();
                                                }
                                            }
                                            else {
                                                model.Discount = Dis;
                                                model.Amount = amt;
                                                model.DiscountType = $('#DiscountType_DiscountType').data("kendoDropDownList").text() === '@NIMBOLE.GlobalResources.Resources.Select' ? "" : $('#DiscountType_DiscountType').data("kendoDropDownList").text();
                                                $('#Discount').val("0");
                                            }
                                            model.DiscountType = $('#DiscountType_DiscountType').data("kendoDropDownList").text() === '@NIMBOLE.GlobalResources.Resources.Select' ? "" : $('#DiscountType_DiscountType').data("kendoDropDownList").text();
                                            model.Discount = Dis;
                                            var size = $('#Size').val();
                                            size = parseFloat(size) + parseFloat(amt);
                                            $('#Size').val(parseFloat(size));
                                            $('#hdnSize').val(parseFloat(size));
                                            model.TempTransactionType = "Edit";
                                            grid.pager.element.show();
                                            kendo.ui.progress(grid.wrapper, false);
                                            $(".k-grid-toolbar #customProdCompCommand").show();
                                        }
                                        else {
                                            e.preventDefault;
                                            kendo.ui.progress(grid.wrapper, false);
                                            $(".k-grid-toolbar #customProdCompCommand").show();
                                            return false;
                                        }
                                    }
                                }
                                function deleteLeadProduct(e) {
                                    var grid = $("#GridLeadProducts").data("kendoGrid");
                                    kendo.ui.progress(grid.wrapper, true);
                                    $.ajax({
                                        url: '@Url.Action("Delete", "LeadProducts")',
                                        type: 'POST',
                                        async: false,
                                        data: { 'ProdId': e.model.ProdId, "Comp1Id": e.model.Comp1ProdId },
                                        success: function (data) {
                                            swal.close();
                                            grid.dataSource.read();
                                            kendo.ui.progress(grid.wrapper, false);
                                        },
                                        error: function () {
                                            Dialog('Error occured', "");
                                            kendo.ui.progress(grid.wrapper, false);
                                        }
                                    });
                                }
                                function OnDeleteLeadProduct(e) {
                                    var grid = $("#GridLeadProducts").data("kendoGrid");
                                    grid.cancelChanges();
                                    e.model.TempTransactionType = "Delete";
                                    e.preventDefault;
                                    Dialog("Do you want to delete?", "delLProd", e);
                                }
                                function onLeadProductsDataBound(e) {
                                    $('#Size').val($('#hdnSize').val().trim());
                                    $(".k-grid-toolbar #customProdCompCommand").show();
                                    $("#GridLeadProducts tr.k-alt").removeClass("k-alt");
                                    if (this.dataSource.view().length == 0) {
                                        var currentPage = this.dataSource.page();
                                        if (currentPage > 1) {
                                            this.dataSource.page(currentPage - 1);
                                        }
                                    }
                                }
                                function onRequestEnd(e) {
                                    var grid = $("#GridLeadProducts").data("kendoGrid");
                                    kendo.ui.progress(grid.wrapper, true);
                                    if (e.type == "update") {
                                        grid.dataSource.read();
                                        setTimeout(function () {
                                            $.ajax({
                                                url: '@Url.Action("UpdateValue", "Leads")',
                                                type: 'POST',
                                                async: false,
                                                data: { 'leadValue': $('#hdnSize').val() },
                                                success: function () {
                                                    kendo.ui.progress(grid.wrapper, false);
                                                },
                                                error: function () {
                                                    kendo.ui.progress(grid.wrapper, false);
                                                }
                                            });
                                        }, 2000);
                                        kendo.ui.progress(grid.wrapper, false);
                                    }
                                    else if (e.type == "create") {
                                        grid.dataSource.read();
                                        kendo.ui.progress(grid.wrapper, false);
                                    }
                                    else if (e.type == undefined) {
                                        grid.dataSource.read();
                                        kendo.ui.progress(grid.wrapper, false);
                                    }
                                    $(".k-grid-toolbar #customProdCompCommand").show();
                                    kendo.ui.progress(grid.wrapper, false);
                                }
                            </script>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-lg-12">
                                @(Html.Kendo().PanelBar()
                                    .Name("PanelbarExternalContacts")
                                    .ExpandMode(PanelBarExpandMode.Single)
                                    .Items(panelbar =>
                                    {
                                        panelbar.Add().Text(@NIMBOLE.GlobalResources.Resources.LeadContacts)
                                        .Content(@<text>
                                                <div class="dataTable_wrapper">
                                                    @(Html.Kendo().Grid<NIMBOLE.Models.Models.ExtContactModel>()
                                                        .Name("GridExternalContacts")
                                                        .Columns(columns =>
                                                        {
                                                            columns.Bound(m => m.WorkEmail).Title(@NIMBOLE.GlobalResources.Resources.Email).EditorTemplateName("ExternalWorkEmail").Width(200);
                                                            columns.Bound(m => m.FullName).Title(@NIMBOLE.GlobalResources.Resources.Name).EditorTemplateName("ExternalContact").Width(200);
                                                            columns.Bound(m => m.ExtContactRole).Title(@NIMBOLE.GlobalResources.Resources.Role).EditorTemplateName("ExternalContactRole").Width(200);
                                                            columns.Command(command => { command.Edit().Text(" ").UpdateText(" ").CancelText(" ").HtmlAttributes(new { onclick = "onClick(this)" }); command.Destroy().Text(" "); }).Title(@NIMBOLE.GlobalResources.Resources.Actions).Width(120);
                                                        })
                                                        .ToolBar(toolbar => toolbar.Create().Text(@NIMBOLE.GlobalResources.Resources.Add).HtmlAttributes(new { id = "customExtContactCommand" }))
                                                        .Editable(editable => { editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false); })
                                                        .Events(e => { e.Cancel("onContactCancel"); e.Save("onExternalContactSave"); e.Remove("OnDeleteExtContact"); })
                                                        .Pageable()
                                                        .Events(e => e.DataBound("onContactsDataBound"))
                                                        .Scrollable()
                                                        .AutoBind(true)
                                                        .DataSource(
                                                         dataSource => dataSource
                                                            .Ajax()
                                                            .PageSize(5)
                                                            .Sort(e => e.Add("Id").Descending())
                                                            .Events(events => events.Error("error_handler").RequestEnd("onExternalContactsGridRequestEnd"))
                                                            .Model(model => model.Id(m => m.Id))
                                                            .Create(e => e.Action("Create", "TranExtContact").Data("BindLeadId"))
                                                            .Read(e => e.Action("TranExtContact_Read", "TranExtContact").Data("BindLeadId"))
                                                            .Update(e => e.Action("Edit", "TranExtContact"))
                                                            .Destroy(e => e.Action("Delete1", "TranExtContact"))
                                                        )
                                                    )
                                                </div>
                                        </text>);
                                    })
                                )
                                <script>
                                    function onContactsDataBound(e) {
                                        $("#GridExternalContacts tr.k-alt").removeClass("k-alt");
                                        if (this.dataSource.view().length == 0) {
                                            var currentPage = this.dataSource.page();
                                            if (currentPage > 1) {
                                                this.dataSource.page(currentPage - 1);
                                            }
                                        }
                                    }
                                    function OnDeleteExtContact(e) {
                                        e.preventDefault;
                                        Dialog("Do you want to delete?", "delExtCon", e);
                                        return false;
                                    }
                                    function delExtContact(e) {
                                        var grid = $("#GridExternalContacts").data("kendoGrid");
                                        grid.cancelChanges();
                                        $(".k-grid-toolbar #customExtContactCommand").hide();
                                        kendo.ui.progress(grid.wrapper, true);
                                        $.ajax({
                                            url: '@Url.Action("Delete", "TranExtContact")',
                                            type: 'POST',
                                            async: false,
                                            data: { 'Id': e.model.Id },
                                            success: function (data) {
                                                swal.close();
                                                grid.dataSource.read();
                                                kendo.ui.progress(grid.wrapper, false);
                                                $(".k-grid-toolbar #customExtContactCommand").show();
                                            },
                                            error: function () {
                                                Dialog('Error occured', "");
                                                kendo.ui.progress(grid.wrapper, false);
                                                $(".k-grid-toolbar #customExtContactCommand").show();
                                            }
                                        });
                                    }

                                    function onClick(e) {
                                        $(".k-grid-toolbar #customExtContactCommand").hide();
                                        e.setAttribute("style", "pointer-events:none");
                                        var grid = $("#GridExternalContacts").data("kendoGrid");
                                        kendo.ui.progress(grid.wrapper, true);
                                        if (e.className.toString().split(' ').indexOf("k-grid-edit") > -1) {
                                            var selectedItem = e.parentElement.parentElement.children[1].innerHTML;
                                            grid.tbody.find("tr[role='row']").each(function () {
                                                if (this.children[1].innerHTML != selectedItem) {
                                                    $(this).find(".k-grid-edit").remove();
                                                    $(this).find(".k-grid-delete").remove();
                                                }
                                                grid.pager.element.hide();
                                            });
                                            setTimeout(function () {
                                                BindExtContactRole();
                                                BindExtContact();
                                                BindExtContactWorkMail();
                                                var grid = $("#GridExternalContacts").data("kendoGrid");
                                                grid.tbody.find("tr[role='row']").each(function () {
                                                    $(this).find(".k-grid-edit").remove();
                                                    $(this).find(".k-grid-delete").remove();
                                                });
                                                var model = grid.editable.options.model;
                                                var contactRole = $("#ExtContactRole_ExtContactRole").data("kendoComboBox");
                                                contactRole.text(model.ExtContactRole);
                                                $("#ExtContactRole_ExtContactRole").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                                $("#FullName_FullName").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                                $("#WorkEmail_WorkEmail").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                                model.ExtContactRole = $("#ExtContactRole_ExtContactRole").val();
                                                var ExtWorkEmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                                            }, 1000);
                                            setTimeout(function () {
                                                kendo.ui.progress(grid.wrapper, false);
                                            }, 8000);
                                        }
                                        else if (e.className.toString().split(' ').indexOf("k-grid-update") > -1) {
                                            var grid = $("#GridExternalContacts").data("kendoGrid");
                                            var data = grid.dataSource.data();
                                            for (var i = 0; i < data.length; i++) {
                                                if (!dirtyFlag)
                                                    dirtyFlag = data[i].dirty;
                                            }
                                            if (dirtyFlag) {
                                                var FullName = $("#FullName_FullName").data("kendoComboBox").input.val();
                                                var ExtContactRole = $("#ExtContactRole_ExtContactRole").data("kendoComboBox").input.val();
                                                var ExtWorkEmail = $('#WorkEmail_WorkEmail').data("kendoComboBox").input.val();

                                                if (FullName === "") {
                                                    e.preventDefault;
                                                    Dialog("Please select(input) name.", "", e);
                                                    e.setAttribute("style", "");
                                                    $("#FullName_FullName").attr("required", "required");
                                                }
                                                else if (ExtWorkEmail === "") {
                                                    e.preventDefault;
                                                    Dialog("Please select(input) email.", "", e);
                                                    e.setAttribute("style", "");
                                                    $("#WorkEmail_WorkEmail").attr("required", "required");
                                                }
                                                else if (ExtContactRole === "") {
                                                    e.preventDefault;
                                                    Dialog("Please select(input) role.", "", e);
                                                    e.setAttribute("style", "");
                                                    $("#ExtContactRole_ExtContactRole").attr("required", "required");
                                                }
                                                else if (!validateEmail(null)) {
                                                    e.setAttribute("style", "");
                                                    e.preventDefault;
                                                }
                                                else {
                                                    var model = grid.editable.options.model;
                                                    var combobox = $("#ExtContactRole_ExtContactRole").data("kendoComboBox");
                                                    var ExtFullName = $("#FullName_FullName").data("kendoComboBox");
                                                    var ContctId = ExtFullName._selectedValue;
                                                    var ExtWorkEmail = $('#WorkEmail_WorkEmail').data("kendoComboBox");
                                                    var workEmail = ExtWorkEmail._prev;
                                                    model.WorkEmail = workEmail;
                                                    var InFullname = ExtFullName._initial;
                                                    var PreFullName = ExtFullName._prev;
                                                    if (InFullname == PreFullName) {
                                                        model.FullName = InFullname;
                                                    }
                                                    else {
                                                        model.FullName = PreFullName;
                                                    }
                                                    var ExtContactRoleName = combobox._initial;
                                                    var ExtContactRname = combobox._prev;

                                                    if (ExtContactRoleName == ExtContactRname) {
                                                        model.ExtContactRole = ExtContactRoleName;
                                                    }
                                                    else {
                                                        model.ExtContactRole = ExtContactRname;
                                                    }
                                                    //if (model.ExtContactRole == "" || model.WorkEmail == "") {
                                                    //    var grid = $("#GridExternalContacts").data("kendoGrid").dataSource.read();
                                                    //    kendo.ui.progress(grid.wrapper, false);
                                                    //}
                                                }
                                                kendo.ui.progress(grid.wrapper, false);
                                                $(".k-grid-toolbar #customExtContactCommand").show();
                                            }
                                            else {
                                                e.preventDefault;
                                                kendo.ui.progress(grid.wrapper, false);
                                                e.setAttribute("style", "");
                                                $(".k-grid-toolbar #customExtContactCommand").show();
                                                return false;
                                            }
                                        }
                                        else if (e.className.toString().split(' ').indexOf("k-grid-cancel") > -1) {
                                            //var grid = $("#GridExternalContacts").data("kendoGrid");
                                            //var Fullname  = $("#FullName_FullName").val();
                                            //if(Fullname === "" || Fullname === undefined)
                                            //{
                                            //    grid.dataSource._removeItems(0);
                                            //}
                                            //grid.dataSource.read();
                                            grid.pager.element.show();
                                            e.setAttribute("style", "");
                                            kendo.ui.progress(grid.wrapper, false);
                                            $(".k-grid-toolbar #customExtContactCommand").show();
                                        }
                                    }

                                    function validateEmail(e) {
                                        var email = $('#WorkEmail_WorkEmail').data("kendoComboBox").input.val();
                                        var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                        var result = re.test(email);
                                        return result;
                                    }
                                    $('.k-grid-update').on("click", function () {
                                        $(this).addClass("k-state-disabled")
                                         .bind("click", disable = function (e) {
                                             e.preventDefault();
                                             return false;
                                         });
                                    });
                                    function onExternalContactSave(e) {
                                        var grid = $("#GridExternalContacts").data("kendoGrid");
                                        kendo.ui.progress(grid.wrapper, true);
                                        var data = grid.dataSource.data();
                                        var contacts;
                                        $.ajax({
                                            url: '@Url.Action("TranExtContact_Read", "TranExtContact")',
                                            type: 'GET',
                                            async: false,
                                            data: { 'leadId': leadId },
                                            success: function (data) {
                                                contacts = data.Data;
                                            },
                                            error: function () {
                                            }
                                        });
                                        var currentConatctMail = e.model.WorkEmail;
                                        var currentConatactName = e.model.FullName;
                                        var currentContactRole = e.model.ExtContactRole;
                                        var temp = 0
                                        if (contacts != null && contacts.length > 0 && dirtyFlag) {
                                            $.each(contacts, function (key, value) {
                                                if (value.WorkEmail.toString().trim() === currentConatctMail.toString().trim() && value.FullName.toString().trim() === currentConatactName.toString().trim() && value.ExtContactRole.toString().trim() === currentContactRole.toString().trim()) {
                                                    temp = temp + 1;
                                                }
                                            });
                                            if (temp > 0) {
                                                Dialog("Duplicates not allowed", "", e);
                                                $("#GridExternalContacts").data("kendoGrid").cancelChanges();
                                                grid.dataSource.read();
                                                kendo.ui.progress(grid.wrapper, false);
                                                temp = 0;
                                            }
                                            else {
                                                if (e.model.isNew()) {
                                                    var roleId = $('#ExtContactRole_ExtContactRole').val();
                                                    var contactId = $('#FullName_FullName').val();
                                                    var ExtWorkEmail = $('#WorkEmail_WorkEmail').data("kendoComboBox");
                                                    var workEmail = ExtWorkEmail._prev;
                                                    e.model.WorkEmail = workEmail;
                                                    if (roleId != 0 && contactId != 0) {
                                                        e.model.ExtContactRoleId = _roleId;
                                                        e.model.ExtContactId = _contactId;
                                                        e.model.FullName = _contactId;
                                                        if (_contactId == 0) {
                                                            e.model.ExtContactId = contactId;
                                                        }
                                                        e.model.WorkEmail = workEmail;
                                                        _roleId = e.model.ExtContactRole;
                                                        workEmail = e.model.WorkEmail;
                                                        _roleId = 0;
                                                        _contactId = 0;
                                                    }
                                                    else {
                                                        e.preventDefault;
                                                    }
                                                }
                                            }
                                        }
                                        dirtyFlag = false;
                                        grid.pager.element.show();
                                        kendo.ui.progress(grid.wrapper, false);
                                    }
                                    function onExternalContactsGridRequestEnd(e) {
                                        var grid = $("#GridExternalContacts").data("kendoGrid");
                                        kendo.ui.progress(grid.wrapper, true);
                                        if (e.type == "create" || e.type == "update") {
                                            grid.dataSource.read();
                                        }
                                        kendo.ui.progress(grid.wrapper, false);
                                        $(".k-grid-toolbar #customExtContactCommand").show();
                                    }
                                    function onContactCancel(e) {
                                        var grid = $("#GridExternalContacts").data("kendoGrid").dataSource.read();
                                        kendo.ui.progress(grid.wrapper, false);
                                    }
                                    $("#customExtContactCommand").click(function (e) {
                                        var grid = $("#GridExternalContacts").data("kendoGrid");
                                        kendo.ui.progress(grid.wrapper, false);
                                        setTimeout(function () {
                                            BindExtContact();
                                            BindExtContactRole();
                                            BindExtContactWorkMail();
                                            $("#FullName_FullName").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                            $("#ExtContactRole_ExtContactRole").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                            $("#WorkEmail_WorkEmail").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                                            var grid = $("#GridExternalContacts").data("kendoGrid");
                                            $("#FullName_FullName").attr("required", "required");
                                            $("#WorkEmail_WorkEmail").attr("required", "required");
                                            $("#ExtContactRole_ExtContactRole").attr("required", "required");
                                            grid.tbody.find("tr[role='row']").each(function () {
                                                $(this).find(".k-grid-edit").remove();
                                                $(this).find(".k-grid-delete").remove();
                                            });
                                            grid.pager.element.hide();
                                        }, 1000);
                                    });
                                </script>

                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-lg-12" style="text-align: right;">
                                <input id="btnSubmit" type="button" class="btn btn-success" value='@NIMBOLE.GlobalResources.Resources.Update'>
                                <input id="btnSubmit1" type="button" class="btn btn-success" value='@NIMBOLE.GlobalResources.Resources.UpdateAndClose'>
                                <input type="button" value='@NIMBOLE.GlobalResources.Resources.Cancel' class="btn btn-danger" onclick="location.href = '/Leads/Index'" />
                                <br />
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-lg-12">
                                @(Html.Kendo().PanelBar()
                                    .Name("PanelbarLeadDocuments")
                                    .ExpandMode(PanelBarExpandMode.Single)
                                    .Items(panelbar =>
                                    {
                                        panelbar.Add().Text(@NIMBOLE.GlobalResources.Resources.LeadDocuments)
                                            .Content(@<text>
                                                <div class="dataTable_wrapper">
                                                    @(Html.HiddenFor(x => x.Id))
                                                    @(Html.Kendo().Grid<NIMBOLE.Models.Models.DocumentWithMultipleUrlsModel>()
                                            .Name("GridLeadDocuments")
                                                            //.Navigatable()
                                                            //.Events(events => events.Navigate("gridNavigate"))
                                            .Columns(columns =>
                                            {
                                                columns.Bound(p => p.Id).Hidden();
                                                columns.Bound(p => p.DocumentName);
                                                columns.Template(e => { }).ClientTemplate("#if(data.lstDocumentUrl != null && data.lstUrlBasedId != null){#" + "#=DisplayUrls(lstDocumentUrl,lstUrlBasedId)#" + "#}else{#<input type='file' value='Lead' name='files' id='files#: Id #' />#}#").Title(@NIMBOLE.GlobalResources.Resources.DocumentUrl);
                                                columns.Command(command => { command.Edit().Text(" ").UpdateText(" ").CancelText(" "); command.Destroy().Text(" "); }).Title(@NIMBOLE.GlobalResources.Resources.Actions);
                                            })
                                                .ToolBar(toolbar => toolbar.Create().Text(@NIMBOLE.GlobalResources.Resources.Add).HtmlAttributes(new { id = "customDocumentCommand" }))
                                                .Editable(editable => { editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false); })
                                                .Events(e => { e.DataBound("onDataBound").Edit("OnInsert").Remove("deleteLeadDocument").Save("OnSave").Cancel("OnCancel"); })
                                            .Pageable()
                                            .Sortable()
                                            .Scrollable()
                                            .DataSource(dataSource => dataSource
                                                .Ajax()
                                                .PageSize(5)
                                                        .Events(events => events.Error("error_handler").RequestEnd("onDocumentsGridRequestEnd"))
                                                .Model(e => { e.Id(m => m.Id); })
                                                .ServerOperation(false)
                                                        .Create(e => e.Action("LeadDocumentCreate", "Documents").Data("BindLeadId"))
                                                        .Read(e => e.Action("ReadDistinctDocuments", "Documents").Data("BindLeadId"))
                                                .Update(e => e.Action("Edit", "Documents"))
                                                .Destroy(e => e.Action("Delete", "Documents", new { Id = "#=lstUrlBasedId#" }))
                                               )
                                                    )
                                                    <script>
                                                        $("#customDocumentCommand").click(function (e) {
                                                            var grid = $("#GridLeadDocuments").data("kendoGrid");
                                                            grid.tbody.find("tr[role='row']").each(function () {
                                                                $(this).find(".k-grid-edit").remove();
                                                                $(this).find(".k-grid-delete").remove();
                                                            });
                                                            grid.pager.element.hide();
                                                            //$(".k-grid-toolbar #customDocumentCommand").hide();
                                                        });
                                                    </script>

                                                    <script id="fileTemplate" type="text/x-kendo-template">
                                                        <span class='k-progress'></span>
                                                        <div class='file-wrapper'>
                                                            <h6 class='file-heading file-name-heading'><b>Name:</b> #=name#</h6>
                                                            <h6 class='file-heading file-size-heading'><b>Size:</b> #=size# bytes</h6>
                                                            @*<button type='button' style="margin: 0px 5px 5px;" class='k-upload-action'></button>*@
                                                        </div>
                                                        @*<div>
                                                                <button type='button' style="margin: 0px 5px 5px;" class='k-upload-action'></button>
                                                            </div>*@
                                                    </script>
                                                    <script>
                                                        function onDocumentsGridRequestEnd(e) {
                                                            var grid = $("#GridLeadDocuments").data("kendoGrid");
                                                            kendo.ui.progress(grid.wrapper, true);
                                                            if (e.type == "create" || e.type == "update") {
                                                                grid.dataSource.read();
                                                                kendo.ui.progress(grid.wrapper, false);
                                                            }
                                                            kendo.ui.progress(grid.wrapper, false);
                                                        }
                                                        function OnSave(e) {
                                                            var grid = $("#GridLeadDocuments").data("kendoGrid");
                                                            var data = this.dataSource.data()
                                                            var currentDocumentName = e.model.DocumentName;
                                                            if (currentDocumentName == "") {
                                                                e.preventDefault();
                                                                Dialog("Please Enter Documentname", "", e);
                                                                $("#DocumentName").attr("required", "required");
                                                                return false;
                                                            }
                                                            else {
                                                                var File = $('#files0').data("kendoUpload").wrapper.find(".k-file").length;
                                                                var Upload = $('.k-upload-status').text();
                                                                if (File == 0 || Upload == "") {
                                                                    e.preventDefault();
                                                                    Dialog("Please upload file", "", e);
                                                                    return false;
                                                                }
                                                            }
                                                            var temp = 0;
                                                            $.each(data, function (key, value) {
                                                                if (value.DocumentName === currentDocumentName && value.Id !== 0) {
                                                                    e.preventDefault();
                                                                    Dialog("Duplicates not allowed", "", e);
                                                                    $('#GridLeadDocuments').data("kendoGrid").cancelChanges();
                                                                }
                                                                temp = temp + 1;
                                                            });
                                                            grid.pager.element.show();
                                                            setTimeout(function () {
                                                                var grid = $("#GridLeadDocuments").data("kendoGrid");
                                                                grid.dataSource.read();
                                                            }, 3000);
                                                        }
                                                        function OnCancel(e) {
                                                            $("#GridLeadDocuments .k-grid-pager").removeAttr('style');
                                                        }
                                                        function OnInsert(e) {
                                                            if (e.model.isNew() == true) {

                                                                var data = $("#GridLeadDocuments").data("kendoGrid").dataSource.data();

                                                                var upload = $('#files0');
                                                                upload.kendoUpload({
                                                                    multiple: false,
                                                                    async: {
                                                                        saveUrl: '@Url.Action("CreateDocuments", "Leads", new { DocType = "Lead" })',
                                                                        removeUrl: "remove",
                                                                        autoUpload: false//,
                                                                        //batch: true
                                                                    },
                                                                    select: function (e) {

                                                                        var files = e.files;
                                                                        if (files.length > 5) {
                                                                            Dialog("Maximum 5 files can be uploaded at a time.", "", e);
                                                                            e.preventDefault();
                                                                            return false;
                                                                        }
                                                                        for (var fileCntr = 0; fileCntr < files.length; fileCntr++) {
                                                                            if (files[fileCntr].size > 10485760) {
                                                                                Dialog("File size more than 10MB can not be uploaded.", "", e);
                                                                                e.preventDefault();
                                                                                return false;
                                                                            }
                                                                            if (files[fileCntr].extension.toLowerCase() == '.exe') {
                                                                                Dialog("Executable files can not be uploaded.", "", e);
                                                                                e.preventDefault();
                                                                                return false;
                                                                            }
                                                                        }
                                                                    },
                                                                    template: kendo.template($('#fileTemplate').html())
                                                                });
                                                            }
                                                        }
                                                        function deleteLeadDocument(e) {
                                                            e.preventDefault;
                                                            Dialog("Do you want to delete?", "delLDoc", e);
                                                        }
                                                        function delLeadDocument(e) {
                                                            var grid = $("#GridLeadDocuments").data("kendoGrid");
                                                            //grid.cancelChanges();
                                                            kendo.ui.progress(grid.wrapper, true);
                                                            $.ajax({
                                                                url: '@Url.Action("Delete", "Documents")',
                                                                type: 'DELETE',
                                                                async: false,
                                                                data: { id: e.model.lstUrlBasedId[0] },
                                                                success: function (data) {
                                                                    swal.close();
                                                                    grid.dataSource.read();
                                                                    kendo.ui.progress(grid.wrapper, false);
                                                                },
                                                                error: function (xhr) {
                                                                    Dialog(xhr.statusText, "");
                                                                    kendo.ui.progress(grid.wrapper, false);
                                                                }
                                                            });
                                                            grid.pager.element.show();
                                                        }
                                                        function DisplayUrls(data, id) {
                                                            var result = "<ol>";
                                                            var j = data.length;

                                                            for (var i = 0; i < j; i++) {
                                                                result += "<li><a href='" + data[i] + "' target='_blank'>" + data[i].split("/").slice(-1)[0] + "</a></li>";
                                                            }
                                                            result += "</ol>";
                                                            return result;
                                                        }
                                                        function onDataBound(e) {
                                                            //To Hide Edit buttons.
                                                            var grid = $("#GridLeadDocuments").data("kendoGrid");
                                                            $("#GridLeadDocuments tr.k-alt").removeClass("k-alt");
                                                            grid.tbody.find("tr[role='row']").each(function () {
                                                                $(this).find(".k-grid-edit").remove();
                                                            });
                                                            if (this.dataSource.view().length == 0) {
                                                                var currentPage = this.dataSource.page();
                                                                if (currentPage > 1) {
                                                                    this.dataSource.page(currentPage - 1);
                                                                }
                                                            }
                                                        }



                                                    </script>
                                                </div>
                                            </text>);
                                    })
                                )
                                <br />

                                <div class="row">
                                    <div class="col-lg-12" style="text-align: right;">


                                        <a id="anchorActivities" href="javascript:void(0);">@NIMBOLE.GlobalResources.Resources.Activities</a>
                                        &nbsp;&nbsp;&nbsp;
                                        <a id="anchorTransaction" href="javascript:void(0);">@NIMBOLE.GlobalResources.Resources.Transaction</a>
                                    </div>
                                </div>

                                <script>
                                    var panelbar;
                                    $(document).ready(function () {
                                        $("#anchorLeadDiscounts").click(function () {
                                            $("#divLeadDiscounts").toggle("slow");
                                            var newText = $(this).text() == "@NIMBOLE.GlobalResources.Resources.ClosePriceRevision" ? "@NIMBOLE.GlobalResources.Resources.PriceRevision" : "@NIMBOLE.GlobalResources.Resources.ClosePriceRevision";
                                            $(this).text(newText);
                                            @*if ('@Model.objLeadPriceDiscountModel.ApprovalStatus'.toString() === "True") {
                                                var group = "input:checkbox[name='objLeadPriceDiscountModel.ApprovalStatus']";
                                                $(group).prop("checked", true);
                                                $('#divSelectApproveStatus').show();
                                                $('#divSelectApprovedBy').show();
                                            } else {
                                                var group = "input:checkbox[name='objLeadPriceDiscountModel.ApprovalStatus']";
                                                $(group).prop("checked", false);
                                                $('#divSelectApproveStatus').hide();
                                                $('#divSelectApprovedBy').hide()
                                            }*@
                                        });
                                        $("#anchorActivities").click(function () {
                                            $("#divActivityCollapsable").toggle("slow");
                                            var newText = $(this).text() == "@NIMBOLE.GlobalResources.Resources.CloseActivities" ? "@NIMBOLE.GlobalResources.Resources.Activities" : "@NIMBOLE.GlobalResources.Resources.CloseActivities";
                                            $(this).text(newText);
                                        });
                                        if ('@Session["CurrentTenentId"]'.toUpperCase() == '2218DBD6-719E-4BFD-B615-39EAD3682AC8')
                                        {
                                            $('#divTransactionCollapsable').css('visibility', 'hidden');
                                            $("#anchorTransaction").css('visibility', 'hidden');
                                        }
                                        $("#anchorTransaction").click(function () {
                                            $("#divTransactionCollapsable").toggle("slow");
                                            var newText = $(this).text() == "@NIMBOLE.GlobalResources.Resources.CloseTransaction" ? "@NIMBOLE.GlobalResources.Resources.Transaction" : "@NIMBOLE.GlobalResources.Resources.CloseTransaction";
                                            $(this).text(newText);
                                        });
                                    });
                                </script>
                                <br />
                                <script>
                                    $(function () {
                                        var panelElement = $("#PanelbarExternalContacts");
                                        panelElement.kendoPanelBar();
                                        $("#PanelbarExternalContacts li").click(function (e) {
                                            if (panelElement.hasClass("k-state-active")) {
                                                panelElement.removeClass("k-state-active");
                                            }
                                            else {
                                                panelElement.addClass("k-state-active");
                                            }
                                        });
                                    });
                                    $(function () {
                                        var panelElement = $("#PanelbarLeadDocuments");
                                        panelElement.kendoPanelBar();
                                        $("#PanelbarLeadDocuments li").click(function (e) {
                                            if (panelElement.hasClass("k-state-active")) {
                                                panelElement.removeClass("k-state-active");
                                            } else {
                                                panelElement.addClass("k-state-active");
                                            }
                                        });
                                    });
                                    $(function () {
                                        var panelElement = $("#PanelbarPriceRevision");
                                        panelElement.kendoPanelBar();
                                        $("#PanelbarPriceRevision li").click(function (e) {
                                            if (panelElement.hasClass("k-state-active")) {
                                                panelElement.removeClass("k-state-active");
                                            } else {
                                                panelElement.addClass("k-state-active");
                                            }
                                        });
                                    });
                                    $(function () {
                                        var panelElement = $("#PanelbarActivities");
                                        panelElement.kendoPanelBar();
                                        $("#PanelbarActivities li").click(function (e) {
                                            if (panelElement.hasClass("k-state-active")) {
                                                panelElement.removeClass("k-state-active");
                                            } else {
                                                panelElement.addClass("k-state-active");
                                            }
                                        });
                                    });
                                    $(function () {
                                        var panelElement = $("#PanelbarProducts");
                                        panelElement.kendoPanelBar();
                                        $("#PanelbarProducts li").click(function (e) {
                                            if (panelElement.hasClass("k-state-active")) {
                                                panelElement.removeClass("k-state-active");
                                            } else {
                                                panelElement.addClass("k-state-active");
                                            }
                                        });
                                    });
                                </script>
                                <br />
                                <div id="divActivityCollapsable" style="display: none;">
                                    @(Html.Kendo().PanelBar()
                                        .Name("PanelbarActivities")
                                        .ExpandMode(PanelBarExpandMode.Single)
                                        .Items(panelbar =>
                                        {
                                            panelbar.Add().Text(@NIMBOLE.GlobalResources.Resources.Activities)
                                            .Expanded(true)
                                            .Content(@<text>
                                                <div id="loading"></div>
                                                <div id="divParialView">
                                                </div>

                                                <br />
                                                <div class="dataTable_wrapper">
                                                    <div class="row">
                                                        <div class="col-lg-12">
                                                            <button id="btnAddActivity" class="k-button k-button-icontext k-grid-add" type="button"><span class="k-icon k-add"></span> @NIMBOLE.GlobalResources.Resources.Add</button>
                                                        </div>
                                                    </div>

                                                    <script>
                                                        $(document).ready(function () {
                                                            function displayLoading(target) {

                                                                var element = $(target);
                                                                kendo.ui.progress(element, true);
                                                            }
                                                            function removeLoading(target) {
                                                                var element = $(target);
                                                                kendo.ui.progress(element, false);
                                                            }
                                                            $("#btnAddActivity").click(function () {
                                                                $("#btnAddActivity").prop('disabled', true);
                                                                displayLoading("#divParialView");
                                                                $.get('@Url.Action("Index", "Activity")', function (data) {
                                                                    $("#divParialView").html(data);
                                                                    $("#divNewAcitvity").show("slow");
                                                                    $('#objActivityModel_MileStoneId').data('kendoDropDownList').value(@Model.LeadStatus);
                                                                    removeLoading("#divParialView");
                                                                });
                                                            });
                                                        });
                                                    </script>

                                                    @(Html.Kendo().Grid<NIMBOLE.Models.Models.MilestoneModel>()
                                                        .Name("MileStoneGrid")
                                                        .Columns(columns =>
                                                        {
                                                            columns.Bound(e => e.Id).Title(@NIMBOLE.GlobalResources.Resources.Id).Hidden();
                                                            columns.Bound(e => e.Description).Title("").Width(200);
                                                        })
                                                        .ClientDetailTemplateId("template")
                                                        .Pageable()
                                                        .Scrollable(e => e.Enabled(true).Height("100%"))
                                                        .Events(e => e.DataBound("MileStoneDataBound"))
                                                        .DataSource(dataSource => dataSource
                                                        .Ajax()
                                                        .PageSize(10)
                                                        .Read(e => e.Action("MileStone_Read", "Leads").Data("BindLeadId"))
                                                        )
                                                        .AutoBind(true)
                                                    )
                                                    <script>
                                                        function MileStoneDataBound(e) {
                                                            $("#MileStoneGrid tr.k-alt").removeClass("k-alt");
                                                            if (this.dataSource.view().length == 0) {
                                                                var currentPage = this.dataSource.page();
                                                                if (currentPage > 1) {
                                                                    this.dataSource.page(currentPage - 1);
                                                                }
                                                            }
                                                        }
                                                    </script>

                                                    <script id="template" type="text/kendo-tmpl">
                                                        @(Html.Kendo().Grid<NIMBOLE.Models.Models.ActivityByMilestone>()
                                                            .Name("GridActivities_#=Id#")
                                                            .Columns(columns =>
                                                            {
                                                                columns.Bound(m => m.Id).Title(@NIMBOLE.GlobalResources.Resources.Id).Hidden();
                                                                columns.Bound(m => m.ActivityTitle).Title(@NIMBOLE.GlobalResources.Resources.Title).Width(200);
                                                                columns.Bound(m => m.ActivityDate).Title(@NIMBOLE.GlobalResources.Resources.ActivityDate).Format("{0:" + DateFormat + "}").Width(100);
                                                                columns.Template(m => null).ClientTemplate("<div><ol class='TreeView'></ol></div><input type='hidden' value='' />").Title(@NIMBOLE.GlobalResources.Resources.DocumentUrl).Width(200);
                                                                columns.Command(command => { command.Destroy().Text(" "); }).Title(@NIMBOLE.GlobalResources.Resources.Actions).Width(70);
                                                            })
                                                                    .Scrollable(e => e.Enabled(true).Height("100%"))
                                                            .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false))
                                                            .Events(e => { e.DataBound("onActiviesDataBound").Remove("onActivityRemove"); })
                                                            .DataSource(datasource => datasource
                                                                .Ajax()
                                                                .PageSize(5)
                                                                .Events(events =>
                                                                {
                                                                    events.Error("error_handler");
                                                                    events.Sync("resyncParentGrid");
                                                                })
                                                                .Sort(e => e.Add("Id").Ascending())
                                                                .Model(e => { e.Id(m => m.Id); })
                                                                        .Read(e => e.Action("ActivityByMilestone_Read", "Activity", new { id = "#=Id#" }).Data("BindLeadId"))
                                                                        .Create(e => e.Action("Create", "Activity").Data("BindLeadId"))
                                                                .Destroy(e => e.Action("Delete1", "Activity"))
                                                            )
                                                            .AutoBind(true)
                                                            .ToClientTemplate()
                                                        )
                                                    </script>

                                                    <script id="fileTemplate" type="text/x-kendo-template">
                                                        <span class='k-progress'></span>
                                                        <div class='file-wrapper'>
                                                            <h6 class='file-heading file-name-heading'><b>Name:</b> #=name#</h6>
                                                            <h6 class='file-heading file-size-heading'><b>Size:</b> #=size# bytes</h6>
                                                            <button type='button' style="margin: 0px 13px 10px;" class='k-upload-action'></button>
                                                        </div>
                                                    </script>

                                                    <script type="text/x-kendo-tmpl" id="ActivityDocumentstemplate">
                                                        <li>
                                                            <a href="#= URL #" target="_blank">#= DocumentName #</a> <input id="delFile_#= Id #" onclick='deleteDocument("#= Id #","Activity");return false;' type="image" src="../../Images/file_delete.png" width="16" height="16" />
                                                        </li>
                                                    </script>

                                                    <script>
                                                        function onActivityRemove(e) {
                                                            e.preventDefault();
                                                            Dialog("Do you want to delete?", "delActDoc", e);
                                                        }
                                                        function delActivityDocument(e) {
                                                            var gridId = document.getElementById(e.sender.element[0].id);
                                                            var grid = $(gridId).data("kendoGrid");
                                                            kendo.ui.progress(grid.wrapper, true);
                                                            $.ajax({
                                                                url: '@Url.Action("Delete", "Activity")',
                                                                type: 'DELETE',
                                                                async: false,
                                                                data: { id: e.model.Id },
                                                                success: function (data) {
                                                                    swal.close();
                                                                    grid.dataSource.read();
                                                                    kendo.ui.progress(grid.wrapper, false);
                                                                },
                                                                error: function (xhr) {
                                                                    Dialog(xhr.statusText, "", e);
                                                                    kendo.ui.progress(grid.wrapper, false);
                                                                }
                                                            });
                                                        }
                                                        function delLeadFile(id) {
                                                            var grid = $('#GridLeadDocuments').data("kendoGrid");
                                                            kendo.ui.progress(grid.wrapper, true);
                                                            setTimeout(function () {
                                                                $.ajax({
                                                                    url: '/Documents/Delete',
                                                                    dataType: "json",
                                                                    type: "DELETE",
                                                                    contentType: 'application/json; charset=utf-8',
                                                                    data: JSON.stringify({ id: id }),
                                                                    async: false,
                                                                    processData: false,
                                                                    cache: false,
                                                                    success: function (data) {
                                                                        grid.dataSource.read();
                                                                        swal.close();
                                                                        kendo.ui.progress(grid.wrapper, false);
                                                                    },
                                                                    error: function (xhr) {
                                                                        grid.dataSource.read();
                                                                        kendo.ui.progress(grid.wrapper, false);
                                                                    }
                                                                });
                                                            }, 1000);
                                                        }
                                                        function delActivityFile(id) {
                                                            var grid = $('#MileStoneGrid').data("kendoGrid");
                                                            kendo.ui.progress(grid.wrapper, true);
                                                            setTimeout(function () {
                                                                $.ajax({
                                                                    url: '/Documents/Delete',
                                                                    dataType: "json",
                                                                    type: "DELETE",
                                                                    contentType: 'application/json; charset=utf-8',
                                                                    data: JSON.stringify({ id: id }),
                                                                    async: false,
                                                                    processData: false,
                                                                    cache: false,
                                                                    success: function (data) {
                                                                        resyncParentGrid();
                                                                        swal.close();
                                                                        kendo.ui.progress(grid.wrapper, false);
                                                                    },
                                                                    error: function (xhr) {
                                                                        resyncParentGrid();
                                                                        kendo.ui.progress(grid.wrapper, false);
                                                                    }
                                                                });
                                                            }, 1000);
                                                        }


                                                        function deleteDocument(id, type) {
                                                            if (type !== "Activity") {
                                                                Dialog("Do you want to delete?", "delLeadFile", id);
                                                            }

                                                            else {
                                                                Dialog("Do you want to delete?", "delActFile", id);
                                                            }
                                                        }

                                                        function deleteActivityurl(id)
                                                        {
                                                            $.ajax({
                                                                url : '/Activity/Deleteurlactivity',
                                                                dataType :"json",
                                                                type : "DELETE",
                                                                contentType : 'application/json charset=utf-8',
                                                                data :JSON.stringify({id : id}),
                                                                async : false,
                                                                processData :false,
                                                                cache :false,
                                                                success : function(data)
                                                                {
                                                                    resyncParentGrid();
                                                                    swal.close();
                                                                },
                                                                error :function(ex)
                                                                {
                                                                    resyncParentGrid();
                                                                    swal.close();
                                                                },
                                                            });
                                                        }
                                                        function onActiviesDataBound(e) {
                                                            var split = e.sender.element[0].id.split('_');
                                                            var GrdActivity = "GridActivities_" + split[1];
                                                            $('div[id=' + GrdActivity + '] tr.k-alt').removeClass("k-alt");
                                                            $('div[id=' + GrdActivity + '] tbody tr .TreeView').each(function () {
                                                                var currentDataItem = $('div[id=' + e.sender.element[0].id + ']').data("kendoGrid").dataItem($(this).closest("tr"));
                                                                activityId = currentDataItem.Id;
                                                                var tree = this;
                                                                $(tree).kendoListView({
                                                                    dataSource: {
                                                                        transport: {
                                                                            read: {
                                                                                url: "/Documents/SelectDocumentsByActivityId?iActivityId=" + activityId,
                                                                                cache: false
                                                                            }
                                                                        }
                                                                    },
                                                                    dataBound: function () {
                                                                        if (this.dataSource.total() == 0) {
                                                                            $(tree).html('<li>Nothing Found.</li>');
                                                                        }
                                                                    },
                                                                    template: kendo.template($("#ActivityDocumentstemplate").html())
                                                                })
                                                            })
                                                            if (this.dataSource.view().length == 0) {
                                                                var currentPage = this.dataSource.page();
                                                                if (currentPage > 1) {
                                                                    this.dataSource.page(currentPage - 1);
                                                                }
                                                            }
                                                        }
                                                        function resyncParentGrid(e) {
                                                            setTimeout(function () {
                                                                var parentGrid = $('#MileStoneGrid').data("kendoGrid");
                                                                parentGrid.dataSource.read();
                                                            }, 1000);
                                                        }
                                                    </script>
                                                    <script>
                                                        function grid_uploadBound() {
                                                            var upload = $('input[name ^= "file"]');
                                                            upload.kendoUpload({
                                                                async: {
                                                                    saveUrl: "save",
                                                                    removeUrl: "remove",
                                                                    autoUpload: false,
                                                                    batch: true
                                                                },
                                                                template: kendo.template($('#fileTemplate').html())
                                                            });
                                                        }
                                                        function addExtensionClass(extension) {
                                                            switch (extension) {
                                                                case '.jpg':
                                                                case '.img':
                                                                case '.png':
                                                                case '.gif':
                                                                    return "img-file";
                                                                case '.doc':
                                                                case '.docx':
                                                                    return "doc-file";
                                                                case '.xls':
                                                                case '.xlsx':
                                                                    return "xls-file";
                                                                case '.pdf':
                                                                    return "pdf-file";
                                                                case '.zip':
                                                                case '.rar':
                                                                    return "zip-file";
                                                                default:
                                                                    return "default-file";
                                                            }
                                                        }
                                                    </script>
                                                </div>
                                            </text>);
                                        })
                                    )
                                </div>


                                <br />

                                @{
    if (@Model.objLeadTransactionInfoModel.Id > 0)
    {
        <div id="divTransactionCollapsable" style="display:none">
            @(Html.Kendo().PanelBar()
                                        .Name("PanelbarTransaction")
                                        .ExpandMode(PanelBarExpandMode.Single)
                                        .Items(panelbar =>
                                        {
                                            panelbar.Add().Text(@NIMBOLE.GlobalResources.Resources.Transaction)
                                            .Expanded(true)
                                            .Content(@<text>
                                                <div id="loading"></div>
                                                <div id="divParialViewTransaction">
                                                </div>

                                                <br />
                                                <div class="dataTable_wrapper">

                                                    <script>
                                                        $(document).ready(function () {
                                                            function displayLoading(target) {

                                                                var element = $(target);
                                                                kendo.ui.progress(element, true);
                                                            }
                                                            function removeLoading(target) {
                                                                var element = $(target);
                                                                kendo.ui.progress(element, false);
                                                            }

                                                            displayLoading("#divParialViewTransaction");


                                                            $.get('@Url.Action("Edit", "Transaction")',{Id:@Model.objLeadTransactionInfoModel.Id}, function (data) {
                                                                $("#divParialViewTransaction").html(data);
                                                                $("#divEditTransaction").show("slow");

                                                                removeLoading("#divParialViewTransaction");
                                                            });
                                                        });

                                                    </script>


                                                    <div class="row">
                                                        <div class="col-lg-10">
                                                            @(Html.Kendo().Grid<NIMBOLE.Models.Models.DocumentModel>()
                            .Name("GridTransDocument")
                            .Columns(columns =>
                            {
                                columns.Bound(m => m.Id).Title(@NIMBOLE.GlobalResources.Resources.Id).Hidden();
                                columns.Bound(m => m.DocumentName).Title(@NIMBOLE.GlobalResources.Resources.DocumentName);

                                columns.Template(m => null).ClientTemplate("<div><ol class='TreeView'></ol></div><input type='hidden' value='' />").Title(@NIMBOLE.GlobalResources.Resources.DocumentUrl);

                            })

                                     .Scrollable(e => e.Enabled(true).Height("100%"))
                                     .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false))
                                            .Pageable()

                                        .Events(e => { e.DataBound("onTransactionDataBound").Remove("onTransactionRemove"); })
                                            .DataSource(datasource => datasource
                                            .Ajax()
                                            .PageSize(20)
                                            .Sort(e => e.Add("Id").Descending())
                                            .Model(model => model.Id(m => m.Id))
                                            .Read(read => read.Action("TransDocument_Read", "Transaction").Data("GetLeadTransRead"))
                                            )
                                                            )



                                                            <script type="text/x-kendo-tmpl" id="TransactionDocumentstemplate">

                                                                <li>
                                                                    <a href="#= URL #" target="_blank">#= DocumentName #</a> <input id="delFile_#= Id #" onclick='deleteTransDocument("#= Id #","Transaction");return false;' type="image" src="../../Images/file_delete.png" width="16" height="16" />
                                                                </li>
                                                            </script>

                                                            <script>

                                                                function onTransactionRemove(e) {
                                                                    e.preventDefault();
                                                                    Dialog("Do you want to delete?", "delTransactionFile", e);
                                                                }

                                                                function deleteTransDocument(id, type) {
                                                                    if(type==="Transaction")
                                                                    {
                                                                        Dialog("Do you want to delete?", "delTransactionFile", id);
                                                                    }

                                                                }

                                                                function delTransactionFile(id) {
                                                                    var grid = $('#GridTransDocument').data("kendoGrid");
                                                                    kendo.ui.progress(grid.wrapper, true);
                                                                    setTimeout(function () {
                                                                        $.ajax({
                                                                            url: '/Documents/Delete',
                                                                            dataType: "json",
                                                                            type: "DELETE",
                                                                            contentType: 'application/json; charset=utf-8',
                                                                            data: JSON.stringify({ id: id }),
                                                                            async: false,
                                                                            processData: false,
                                                                            cache: false,
                                                                            success: function (data) {
                                                                                grid.dataSource.read();
                                                                                swal.close();
                                                                                kendo.ui.progress(grid.wrapper, false);
                                                                            },
                                                                            error: function (xhr) {
                                                                                grid.dataSource.read();
                                                                                kendo.ui.progress(grid.wrapper, false);
                                                                            }
                                                                        });
                                                                    }, 1000);
                                                                }

                                                                function DisplayTransactionUrls(data, id) {
                                                                    var result = "<ol>";
                                                                    var j = data.length;

                                                                    for (var i = 0; i < j; i++) {
                                                                        result += "<li><a href='" + data[i] + "' target='_blank'>" + data[i].split("/").slice(-1)[0] + "</a><span style='padding: 0px 20px 0px 0px;'></span><img id=\"delFile_" + id[i] + "\" onclick='deleteDocument(" + id[i] + ",\"Transaction\");return false;'  src='../../Images/file_delete.png'" + " width=\"16\" height=\"16\" /></li>";
                                                                    }
                                                                    result += "</ol>";
                                                                    return result;
                                                                }

                                                                function onTransactionDataBound(e) {

                                                                    var split = e.sender.element[0].id.split('_');
                                                                    var GrdTransaction = "GridTransDocument";
                                                                    $('div[id=' + GrdTransaction + '] tr.k-alt').removeClass("k-alt");
                                                                    $('div[id=' + GrdTransaction + '] tbody tr .TreeView').each(function () {
                                                                        var currentDataItem = $('div[id=' + e.sender.element[0].id + ']').data("kendoGrid").dataItem($(this).closest("tr"));
                                                                        transactionId = currentDataItem.Id;
                                                                        var tree = this;
                                                                        $(tree).kendoListView({

                                                                            dataSource: {
                                                                                transport: {
                                                                                    read: {
                                                                                        url: "/Documents/GetDocumentsByTransactionId?iTransactionId=" + transactionId,
                                                                                        cache: false
                                                                                    }
                                                                                }
                                                                            },
                                                                            dataBound: function () {
                                                                                if (this.dataSource.total() == 0) {
                                                                                    $(tree).html('<li>Nothing Found.</li>');
                                                                                }
                                                                            },
                                                                            template: kendo.template($("#TransactionDocumentstemplate").html())
                                                                        })
                                                                    })
                                                                    if (this.dataSource.view().length == 0) {
                                                                        var currentPage = this.dataSource.page();
                                                                        if (currentPage > 1) {
                                                                            this.dataSource.page(currentPage - 1);
                                                                        }
                                                                    }
                                                                }

                                                                function GetLeadTransRead() {

                                                                    var trnsid = '@Model.objLeadTransactionInfoModel.Id';

                                                                    var leadid = '@Model.objLeadTransactionInfoModel.LeadId';

                                                                    return { leadId: leadid, TransId: trnsid };
                                                                }
                                                            </script>

                                                        </div>

                                                        <br />
                                                        <div class="col-lg-10" style="text-align: right;">
                                                            <input id="btnEditTransactionSave" type="button" data-url="@Url.Action("Edit", "Transaction")" class="btn btn-success" value=@NIMBOLE.GlobalResources.Resources.Update>
                                                            <input id="btnEditTransactionCancel" type="button" value=@NIMBOLE.GlobalResources.Resources.Cancel class="btn btn-danger" />
                                                        </div>

                                                        <script>

                                                            $('#btnEditTransactionSave').click(function () {
                                                                //var url = $(this).data('url');
                                                                //var form = $(this).closest('form');

                                                                //$.ajax({
                                                                //    url: url,
                                                                //    data: form.serialize(),
                                                                //    type: 'POST',
                                                                //    success: function (data) {
                                                                //        if (data.url) {
                                                                //            // we have a success
                                                                //            window.location.href = data.url;
                                                                //        }
                                                                //        //else {
                                                                //        //    // invalid modelstate => refresh the partial
                                                                //        //    $('#divTransactionCollapsable').html(result);
                                                                //        //}
                                                                //        //window.location.href = window.location.href;
                                                                //        location.reload();
                                                                //    }
                                                                //});
                                                                //$("#anchorTransaction").click();
                                                                debugger;

                                                                //divObj = document.getElementById("divEditTransaction");
                                                                //if ( divObj ){
                                                                //    if ( divObj.textContent ){ // FF
                                                                //        alert ( divObj.textContent );
                                                                //    }else{	// IE
                                                                //        alert ( divObj.innerText );  //alert ( divObj.innerHTML );
                                                                //    }
                                                                //}
                                                                @*{objLeadTransactionInfoModel:@Model.objLeadTransactionInfoModel},*@
                                                                @*$.post('@Url.Action("Edit", "Transaction")',{objLeadTransactionInfoModel:txt}, function (data) {
                                debugger;
                                $("#divParialViewTransaction").html(data);
                                $("#divEditTransaction").show("slow");

                               // removeLoading("#divParialViewTransaction");
                            });*@


                                                                var url = $(this).data('url');
                                                                var form = $(this).closest('form');

                                                                $.ajax({
                                                                    url: url,
                                                                    data: form.serialize(),
                                                                    type: 'POST',
                                                                    success: function (data) {
                                                                        if (data.url) {
                                                                            window.location.href = data.url;
                                                                        }
                                                                        location.reload();
                                                                    }
                                                                });
                                                            });
                                                            $("#btnEditTransactionCancel").click(function () {
                                                                $("#divTransactionCollapsable").hide("slow");
                                                                $("#anchorTransaction").text("Transaction");
                                                            });

                                                        </script>


                                                    </div>


                                                </div>



                                            </text>);
                                        })


            )

            <script>
                $(function () {
                    var panelElement = $("#PanelbarTransaction");
                    panelElement.kendoPanelBar();

                    $("#PanelbarTransaction li").click(function (e) {
                        if (panelElement.hasClass("k-state-active")) {
                            panelElement.removeClass("k-state-active");
                        }
                        else {
                            panelElement.addClass("k-state-active");
                        }
                    });
                });
            </script>


        </div>

    }
    else
    {

        <div id="divTransactionCollapsable" style="display:none">
            @(Html.Kendo().PanelBar()
                                        .Name("PanelbarTransaction")
                                        .ExpandMode(PanelBarExpandMode.Single)
                                        .Items(panelbar =>
                                        {
                                            panelbar.Add().Text(@NIMBOLE.GlobalResources.Resources.Transaction)
                                            .Expanded(true)
                                            .Content(@<text>
                                                <div id="loading"></div>
                                                <div id="divParialViewTransaction">
                                                </div>

                                                <br />
                                                <div class="dataTable_wrapper">

                                                    <script>
                                                        $(document).ready(function () {
                                                            function displayLoading(target) {

                                                                var element = $(target);
                                                                kendo.ui.progress(element, true);
                                                            }
                                                            function removeLoading(target) {
                                                                var element = $(target);
                                                                kendo.ui.progress(element, false);
                                                            }

                                                            displayLoading("#divParialViewTransaction");


                                                            $.get('@Url.Action("Create", "Transaction")',{Id:@Model.objLeadTransactionInfoModel.Id}, function (data) {
                                                                $("#divParialViewTransaction").html(data);
                                                                $("#divCreateTransaction").show("slow");

                                                                removeLoading("#divParialViewTransaction");
                                                            });
                                                        });

                                                    </script>


                                                    <div class="row">

                                                        <br />
                                                        <div class="col-lg-10" style="text-align: right;">
                                                            <input id="btnCreateTransactionSave" type="button" data-url="@Url.Action("Create", "Transaction")" class="btn btn-success" value=@NIMBOLE.GlobalResources.Resources.Save>
                                                            <input id="btnEditTransactionCancel" type="button" value=@NIMBOLE.GlobalResources.Resources.Cancel class="btn btn-danger" />
                                                        </div>

                                                        <script>

                                                            $('#btnCreateTransactionSave').click(function () {
                                                                //var url = $(this).data('url');
                                                                //var form = $(this).closest('form');

                                                                //$.ajax({
                                                                //    url: url,
                                                                //    data: form.serialize(),
                                                                //    type: 'POST',
                                                                //    success: function (data) {
                                                                //        if (data.url) {
                                                                //            // we have a success
                                                                //            window.location.href = data.url;
                                                                //        }
                                                                //        //else {
                                                                //        //    // invalid modelstate => refresh the partial
                                                                //        //    $('#divTransactionCollapsable').html(result);
                                                                //        //}
                                                                //        //window.location.href = window.location.href;
                                                                //        location.reload();
                                                                //    }
                                                                //});
                                                                //$("#anchorTransaction").click();
                                                                debugger;

                                                                //divObj = document.getElementById("divEditTransaction");
                                                                //if ( divObj ){
                                                                //    if ( divObj.textContent ){ // FF
                                                                //        alert ( divObj.textContent );
                                                                //    }else{	// IE
                                                                //        alert ( divObj.innerText );  //alert ( divObj.innerHTML );
                                                                //    }
                                                                //}
                                                                @*{objLeadTransactionInfoModel:@Model.objLeadTransactionInfoModel},*@
                                                                @*$.post('@Url.Action("Edit", "Transaction")',{objLeadTransactionInfoModel:txt}, function (data) {
                                debugger;
                                $("#divParialViewTransaction").html(data);
                                $("#divEditTransaction").show("slow");

                               // removeLoading("#divParialViewTransaction");
                            });*@


                                                                var url = $(this).data('url');
                                                                var form = $(this).closest('form');

                                                                $.ajax({
                                                                    url: url,
                                                                    data: form.serialize(),
                                                                    type: 'POST',
                                                                    success: function (data) {
                                                                        if (data.url) {
                                                                            window.location.href = data.url;
                                                                        }
                                                                        location.reload();
                                                                    }
                                                                });
                                                            });
                                                            $("#btnEditTransactionCancel").click(function () {
                                                                $("#divTransactionCollapsable").hide("slow");
                                                                $("#anchorTransaction").text("Transaction");
                                                            });

                                                        </script>


                                                    </div>


                                                </div>
                                            </text>);
                                        })


            )

            <script>
                $(function () {
                    var panelElement = $("#PanelbarTransaction");
                    panelElement.kendoPanelBar();

                    $("#PanelbarTransaction li").click(function (e) {
                        if (panelElement.hasClass("k-state-active")) {
                            panelElement.removeClass("k-state-active");
                        }
                        else {
                            panelElement.addClass("k-state-active");
                        }
                    });
                });
            </script>


        </div>

    }

                                }



                            </div>
                        </div>

                    </div>
                </div>
            </div>
            @Html.Hidden("hdnType")
            @Html.Hidden("hdnExtContacts")
        </div>

    </main>


    <script>
        $("#customProdCompCommand").click(function (e) {
            setTimeout(function () {
                BindProductTypes();
                BindProducts();
                BindComp1();
                $("#ProductName_ProductName").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd').attr("min", "2").attr("max", "100");
                $("#ProductType_ProductType").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd').attr("minlength", "2").attr("maxlength", "100");
                $("#Comp1Name_Comp1Name").data("kendoComboBox").input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd');
                $("#ProductName_ProductName, #Quantity, #Price, #Discount, #DiscountType_DiscountType, #ProductType_ProductType").attr("onChange", "QuantityChange();")
                $("#Comp1Price").attr("onChange", "Comp1PriceChange();")
                $('#Price').attr("type", "number");
                $("#Comp1Price").attr("type", "number");
                $("#Comp1Price").attr("min", "0").attr("max", "9999999999").attr("maxlength", "10");
                $("#Quantity").attr("min", "1").attr("max", "9999").attr("maxlength", "4");
                $("#Price").attr("min", "1").attr("max", "9999999999").attr("maxlength", "10");
                $("#ProductName_ProductName").attr("required", "required");
                $("#ProductType_ProductType").attr("required", "required");
                $("#Price").attr("required", "required");
                var prodnm = $("#ProductName_ProductName").data("kendoComboBox");
                prodnm.enable(false);
                var compnm = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                compnm.enable(false);
                var grid = $("#GridLeadProducts").data("kendoGrid");
                grid.tbody.find("tr[role='row']").each(function () {
                    $(this).find(".k-grid-edit").remove();
                    $(this).find(".k-grid-delete").remove();
                });
                grid.pager.element.hide();
            }, 1000);
        });
        function Comp1PriceChange(e) {
            $('.k-grid-update').removeAttr("style");
        }
        function onSaveProduct(e) {
            var grid = $("#GridLeadProducts").data("kendoGrid");
            kendo.ui.progress(grid.wrapper, true);
            var data = grid.dataSource.data();
            this.editable.element.find(".k-grid-update").addClass("k-state-disabled").removeClass("k-grid-update");
            this.dataSource.one("requestEnd", function () {
                $("[data-role=grid] .k-grid-update").removeClass("k-state-disabled");
            })
            var currentProductType = e.model.ProductType;
            var currentProductName = e.model.ProductName;
            var temp = 0;
            var ProductType = $("#ProductType_ProductType").data("kendoComboBox");
            PreviosType = ProductType._initial;
            var ProductName = $("#ProductName_ProductName").data("kendoComboBox");
            PreviosName = ProductName._old;
            if (PreviosType == currentProductType && PreviosName == currentProductName)
            { }
            else
            {
                var products;
                $.ajax({
                    url: '@Url.Action("LeadProducts_Read", "LeadProducts")',
                    type: 'GET',
                    async: false,
                    data: { 'leadId': leadId },
                    success: function (data) {
                        products = data.Data;
                    },
                    error: function () {
                    }
                });
                if (products != null && products.length > 0 && productsDirtyFlag) {
                    $.each(products, function (key, value) {
                        if (value.ProductType === currentProductType && value.ProductName === currentProductName) {
                            temp = temp + 1;
                        }
                    });
                    if (temp > 0) {
                        Dialog("Duplicates not allowed", "", e);
                        $('#GridLeadProducts').data("kendoGrid").cancelChanges();
                        grid.dataSource.read();
                        kendo.ui.progress(grid.wrapper, false);
                        temp = 0;
                    }
                }
            }
            productsDirtyFlag = false;
            grid.pager.element.show();
            kendo.ui.progress(grid.wrapper, false);
        }
        function QuantityChange(e) {
            var price = $('#Price').val();
            var Qty = $('#Quantity').val();
            var Amt = price * Qty;
            var Dis = $('#Discount').val();
            var DiscountType = $('#DiscountType_DiscountType').val();
            if (DiscountType == "1") {
                if (Amt <= Dis) {
                    Dialog("Discount should be less than amount", "amt", " ");
                }
                if (Amt > Dis) {
                    var Amt = price * Qty;
                    Amt = (Amt - Dis);
                    $('#Amount').val(Amt).attr("readonly", "readonly").attr("class", "form-control k-textbox");
                }
            }
            else if (DiscountType == "2") {
                if (Dis >= 100) {
                    Dialog("Percentage should be less than 100", "per", " ");
                    $('#Discount').val(0);
                    Dis = $('#Discount').val();
                }
                if (Dis <= 100) {
                    Amt = (Amt - (Amt * Dis / 100));
                    $('#Amount').val(Amt).attr("readonly", "readonly").attr("class", "form-control k-textbox");
                }
            }
            $('#Amount').val(Amt).attr("readonly", "readonly").attr("class", "form-control k-textbox");
            $('.k-grid-update').removeAttr("style");

        }
    </script>

    <script>
        function Dialog(message, type, e) {
            var message;
            swal({
                title: message,
                type: "",
                showCancelButton: true,
                confirmButtonColor: "#337ab7",
                confirmButtonText: "Ok",
                cancelButtonText: "Cancel",
                cancelButtonColor: "#d26a5c",
                showLoaderOnConfirm: false,
                closeOnConfirm: false,
            },
            function (isConfirm) {
                if (isConfirm) {

                    switch (type) {
                        case "eac"://Edit Page Accounts
                            accountChange();
                            break;
                        case "els"://Edit page LeadSource
                            leadSourceChange();
                            break;
                        case "epr"://Edit page productchange
                            productChange();
                            break;
                        case "cmp"://Edit page compititorchange
                            Comp1Change();
                            break;
                        case "typ"://Edit page productTypeChange
                            productTypeChange();
                            break;
                        case "delLProd"://Edit page delete leadproduct
                            deleteLeadProduct(e);
                            break;
                        case "eco"://Edit page ExternalContact
                            extContactChange();
                            break;
                        case "eecr"://Edit page ExternalContactrole
                            extContactRoleChange();
                            break;
                        case "delExtCon"://Edit page Delete Externalcontact
                            delExtContact(e);
                            break;
                        case "delLDoc"://Edit page Delete LeadDocument
                            delLeadDocument(e);
                            break;
                        case "delActDoc"://Edit page Delete ActivityDocument
                            delActivityDocument(e);
                            break;

                        case "delTransactionFile"://Edit page Delete TransactionDocument
                            delTransactionFile(e);
                            break;

                        case "amt"://Default
                            var price = $('#Price').val();
                            var Qty = $('#Quantity').val();
                            $('#Discount').val(0);
                            Dis = $('#Discount').val();
                            var Amt = price * Qty;
                            Amt = (Amt - Dis);
                            $('#Amount').val(Amt).attr("readonly", "readonly").attr("class", "form-control k-textbox");
                            Dis = $('#Discount').val(0);
                            swal.close();
                            break;
                        case "delActFile":
                            deleteActivityurl(e);
                            swal.close();
                            break;
                        case "per"://Default
                            var price = $('#Price').val();
                            var Qty = $('#Quantity').val();
                            $('#Discount').val(0);
                            Dis = $('#Discount').val();
                            var Amt = price * Qty;
                            Amt = (Amt - (Amt * Dis / 100));
                            $('#Amount').val(Amt).attr("readonly", "readonly").attr("class", "form-control k-textbox");
                            swal.close();
                            break;
                        case ""://Default
                            swal.close();
                            break;
                    }
                }
                else {
                    switch (type) {
                        case "eac"://Edit page Accounts
                            var combobox = $("#AccountId").data("kendoComboBox");
                            BindAccount();
                            var combo = $("#Account").data("kendoComboBox");
                            combo.value('@Model.AccountId' != 0 ? '@Model.AccountId' : "");
                            swal.close();
                            combobox.focus();
                            break;
                        case "els"://Edit page LeadSource
                            var combobox = $("#LeadSourceId").data("kendoComboBox");
                            BindLeadSource();
                            setTimeout(function () {
                                var combo = $("#LeadSource").data("kendoComboBox");
                                combo.value('@Model.LeadSourceId' != 0 ? '@Model.LeadSourceId' : "");
                                combobox.focus();
                            }, 5000);
                            swal.close();
                            break;
                        case "epr"://Edit page Product
                            var combobox = $("#ProductName_ProductName").data("kendoComboBox");
                            var grid = $("#GridLeadProducts").data("kendoGrid");
                            var model = grid.editable.options.model;
                            var prodTypeId = $('#ProductType_ProductType').val();
                            combobox.clear();
                            BindProducts(prodTypeId.toString());
                            kendo.ui.progress(combobox.wrapper, false);
                            combobox.bind("change", onProductChange);
                            combobox.value(model.ProductName != 0 ? model.ProductName : "");
                            swal.close();
                            combobox.focus();
                            break;
                        case "cmp"://Lead Page Competitor
                            var combobox = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                            var grid = $("#GridLeadProducts").data("kendoGrid");
                            var model = grid.editable.options.model;
                            var prodTypeId = $('#ProductType_ProductType').val();
                            combobox.clear();
                            BindComp1(prodTypeId.toString());
                            kendo.ui.progress(combobox.wrapper, false);
                            combobox.bind("change", onChangeComp1);
                            combobox.focus();
                            combobox.value(model.Comp1Name != "" || model.Comp1Name != 0 ? model.Comp1Name : "");
                            swal.close();
                            break;
                        case "typ"://Edit Page producttype
                            var combobox = $("#ProductType_ProductType").data("kendoComboBox");
                            combobox.clear();
                            combobox.bind("change", onChangeProductType);
                            if (combobox.input.val() === "") {
                                $("#ProductName_ProductName").data("kendoComboBox").enable(false);
                            }
                            kendo.ui.progress(combobox.wrapper, false);
                            BindProductTypes();
                            combobox.focus();
                            swal.close();
                            break;
                        case "delLProd": //Delete lead products
                            var grid = $("#GridLeadProducts").data("kendoGrid");
                            grid.dataSource.read();
                            swal.close();
                            break;
                        case "eco"://Edit page ExternalContact
                            var combobox = $("#FullName_FullName").data("kendoComboBox");
                            var workmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                            kendo.ui.progress(combobox.wrapper, false);
                            swal.close();
                            BindExtContact();
                            workmail.focus();
                            combobox.bind("change", onExtContactChange);
                            workmail.clear();
                            break;
                        case "delExtCon"://Delete External contact
                            var grid = $("#GridExternalContacts").data("kendoGrid");
                            grid.cancelChanges();
                            swal.close();
                            grid.dataSource.read();
                            $(".k-grid-toolbar #customExtContactCommand").show();
                            kendo.ui.progress(grid.wrapper, false);
                            break;
                        case "delLDoc"://Delete Lead Documents
                            var grid = $("#GridLeadDocuments").data("kendoGrid");
                            grid.cancelChanges();
                            swal.close();
                            grid.dataSource.read();
                            kendo.ui.progress(grid.wrapper, false);
                            break;
                        case "delActDoc"://Delete Activity Document
                            var parentGrid = $('#MileStoneGrid').data("kendoGrid");
                            parentGrid.dataSource.fetch();
                            swal.close();
                            break;
                        case "delLeadFile"://Delete Lead document file
                            var grid = $('#GridLeadDocuments').data("kendoGrid");
                            swal.close();
                            grid.dataSource.read();
                            break;
                        case "delTransactionFile"://Delete Transaction document file
                            var grid = $('#GridTransDocument').data("kendoGrid");
                            swal.close();
                            grid.dataSource.read();
                            break;

                        case "delActFile"://Delete Activity document file
                            var grid = $('#MileStoneGrid').data("kendoGrid");
                            swal.close();
                            grid.dataSource.read();
                            break;
                        case "eecr"://Edit Page ExternalContactRole
                            var combobox = $("#ExtContactRole_ExtContactRole").data("kendoComboBox");
                            BindExtContactRole();
                            kendo.ui.progress(combobox.wrapper, false);
                            swal.close();
                            combobox.bind("change", onExtContactRoleChange);
                            combobox.focus();
                            break;
                    }
                }
            });
        }
    </script>

    // ProductTypes
    <script>
        function BindProductTypes() {
            var grid = $("#GridLeadProducts").data("kendoGrid");
            var model = grid.editable.options.model;
            $("#ProductType_ProductType").kendoComboBox({
                dataTextField: "ProductType",
                dataValueField: "ProductTypeId",
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Products/GetAllProductTypes",
                            dataType: "json"
                        }
                    }
                },
                filter: "startswith",
                value: model == null ? "null" : model.ProductType,
                suggest: true
            });
            var combobox = $("#ProductType_ProductType").data("kendoComboBox");
            combobox.bind("change", onChangeProductType);
        }
        function productTypeChange() {
            var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
            var grid = $("#GridLeadProducts").data("kendoGrid");
            var combobox = $("#ProductType_ProductType").data("kendoComboBox");
            var gridData = dataSource.data();
            var model = grid.editable.options.model;
            var prodTypeId = "";
            $.ajax({
                url: '@Url.Action("CreatePoductType", "Products")',
                type: 'POST',
                async: false,
                data: { 'item': combobox._old },
                success: function (data) {
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "", e);
                        combobox.clear();
                        swal.close();
                        combobox.focus();
                    }
                    else {
                        swal.close();
                        var prodType = $("#ProductType_ProductType").data("kendoComboBox");
                        var prodName = $("#ProductName_ProductName").data("kendoComboBox");
                        var index = 0;
                        for (var i = 0; i < gridData.length; i++) {
                            if (gridData[i].ProductType === prodType._initial && gridData[i].ProductName === prodName.input.val()) {
                                index = i;
                            }
                        }
                        gridData[index].prodType = data.Data[data.Data.length - 1].ProductType;
                        gridData[index].ProductTypeId = data.Data[data.Data.length - 1].ProductTypeId;
                        gridData[index].ProductType = data.Data[data.Data.length - 1].ProductType;
                    }
                    var prodnm = $("#ProductName_ProductName").data("kendoComboBox");
                    prodnm.enable(true);
                    BindProductTypes();
                    var combobox = $("#ProductType_ProductType").data("kendoComboBox");
                    combobox.bind("change", onChangeProductType);
                    combobox.selectedIndex = prodTypeId;
                    combobox._oldIndex = prodTypeId;
                    combobox.input.text(combobox._old);
                    gridData[0].ProductTypeId = prodTypeId;
                    gridData[0].prodType = combobox.input.val();
                    gridData[0].TenantId = '@Session["CurrentTenentId"]';
                    gridData[0].Comp1Name = '';
                    gridData[0].Comp1Price = '0';
                    model.Comp1Name = "";
                    model.Comp1Price = "0";
                    var comboboxProductName = $("#ProductName_ProductName").data("kendoComboBox");
                    comboboxProductName.clear();
                    var combobox = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                    combobox.clear();
                    var comp1price = $("#Comp1Price").val();
                    if (comp1price != "0") {
                        $("#Comp1Price").val("0");
                    }
                    prodnm.focus();
                    BindProducts(prodTypeId);
                    BindComp1(prodTypeId);
                },
                error: function () {
                    Dialog('Error occured', "", e);
                    combobox.bind("change", onChangeProductType);
                    kendo.ui.progress(combobox.wrapper, false);
                }
            });
        }
        function onChangeProductType(e) {
            $("#ProductName_ProductName").prop("disabled", false).removeClass("k-state-disabled");
            $("#Comp1Name_Comp1Name").prop("disabled", false).removeClass("k-state-disabled");
            this.value($.trim(this.value()));
            var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
            var grid = $("#GridLeadProducts").data("kendoGrid");
            var model = grid.editable.options.model;
            var gridData = dataSource.data();
            if (this.value() && this.selectedIndex == -1) {
                var combobox = $("#ProductType_ProductType").data("kendoComboBox");
                kendo.ui.progress(combobox.wrapper, true);
                Dialog("Do you want to add '" + e.sender._old + "' to product type?", "typ");
            }
            else {
                var prodType = $("#ProductType_ProductType").data("kendoComboBox");
                var prodName = $("#ProductName_ProductName").data("kendoComboBox");
                var index = 0;
                for (var i = 0; i < gridData.length; i++) {
                    if (gridData[i].ProductType === prodType._initial && gridData[i].ProductName === prodName.input.val()) {
                        index = i;
                    }
                }
                var prodname = $("#ProductName_ProductName").data("kendoComboBox");
                prodname.enable(true);
                var type = e.sender._old;
                gridData[0].ProductTypeId = e.sender._old;
                gridData[0].ProductType = e.sender.input.val();
                gridData[0].Comp1Name = '';
                gridData[0].Comp1Price = '0';
                model.Comp1Name = "";
                model.ProductName = "";
                model.Comp1Price = "0";
                model.Comp1ProdId = "0";
                var comboboxProductName = $("#ProductName_ProductName").data("kendoComboBox");
                comboboxProductName.clear();
                var combobox = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                combobox.clear();
                var comp1price = $("#Comp1Price").val();
                if (comp1price != "0") {
                    $("#Comp1Price").val("0");
                }
                prodname.focus();
                BindProducts(type);
                BindComp1(type);
            }
        }

        @*function bindProductsCombo(typeId) {

                                        var product = $("#ProductName_ProductName").kendoComboBox({
                                            autoBind: true,
                                            optionLabel: "@NIMBOLE.GlobalResources.Resources.Select",
                                            dataTextField: "ProductName",
                                            dataValueField: "Id",
                                            enable: true,
                                            dataSource: {
                                                transport: {
                                                    read: {
                                                        url: "/Products/GetProductNamesByType?Type=" + typeId
                                                    }
                                                }
                                            },
                                            change: onProductChange
                                        });
                                    }*@
    </script>

    // ProductNames
    <script>
        function BindProducts(type) {
            var product = $("#ProductName_ProductName").kendoComboBox({
                //autoBind: true,
                optionLabel: "@NIMBOLE.GlobalResources.Resources.Select",
                dataTextField: "ProductName",
                dataValueField: "Id",
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Products/GetProductNamesByType?Type=" + type,
                            dataType: "json"
                        }
                    }
                },
                filter: "startswith",
                //change: onProductChange
            });
            var combobox = $("#ProductName_ProductName").data("kendoComboBox");
            combobox.bind("change", onProductChange);
            combobox.input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd').attr("minlength", "2").attr("maxlength", "100");
            @*var grid = $("#GridLeadProducts").data("kendoGrid");
            var model = grid.editable.options.model;
            var _objProducts = JSON.parse('@Html.Raw(Json.Encode(ViewData["ProductNames"]))');
            $("#ProductName_ProductName").kendoComboBox({
                dataTextField: "ProductName",
                dataValueField: "ProductNamesId",
                dataSource: _objProducts,
                filter: "startswith",
                value: model == null ? "null" : model.ProductName.toString(),
                suggest: true
            });
            var combobox = $("#ProductName_ProductName").data("kendoComboBox");
            combobox.bind("change", onProductChange);*@
        }

        function productChange() {
            var _productId = 0;
            var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
            var grid = $("#GridLeadProducts").data("kendoGrid");
            var model = grid.editable.options.model;
            var gridData = dataSource.data();
            var prodTypeId = $('#ProductType_ProductType').val();
            var combobox = $("#ProductName_ProductName").data("kendoComboBox");
            var price = 0;
            var code = "";
            $.ajax({
                url: '@Url.Action("CreateLeadProductWithType", "Products")',
                type: 'POST',
                async: false,
                data: { 'item': combobox._old, 'type': prodTypeId, 'price': $('#Price').val() },
                success: function (data) {
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "", "");
                        setTimeout(function () {
                            var combobox = $("#ProductName_ProductName").data("kendoComboBox");
                            combobox.clear();
                            combobox.focus();
                            swal.close();
                        }, 3000);
                        kendo.ui.progress(combobox.wrapper, false);
                    }
                    else {
                        swal.close();
                        _productId = data.Data[data.Data.length - 1].Id;
                        if (isNaN(_productId) != false)
                            console.log('Product Id is Not Comming');
                        $("#MvcHdnProdId").val(_productId);
                        $("input[name='txtHdnProdId']").val(_productId);
                        gridData[0].ProdId = _productId;
                        $("#Price").val(price).removeAttr("readonly");
                        $("#Amount").val(0);
                        model.ProdId = _productId;
                        model.ProductName = data.Data[data.Data.length - 1].ProductName;
                        model.Price = $("#Price").val();
                        combobox.focus();
                        $("#Price").bind("change", ProdPrice);
                        var types = prodTypeId;
                        //bindProductsCombo(types);
                        BindProducts(types);
                        BindComp1(types);
                        setTimeout(function () {
                            kendo.ui.progress(combobox.wrapper, false);
                        }, 2000);
                    }
                },
                error: function () {
                    combobox.bind("change", onProductChange);
                    kendo.ui.progress(combobox.wrapper, false);
                }
            });
        }
        function onProductChange(e) {
            var grid = $("#GridLeadProducts").data("kendoGrid");
            var model = grid.editable.options.model;
            var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
            var gridData = dataSource.data();
            this.value($.trim(this.value()));
            var combobox = $("#ProductName_ProductName").data("kendoComboBox");
            productName = combobox._prev;
            var prodTypeId = model.ProductTypeId;
            if (model.Comp1Name === this.text()) {
                if (productName != "") {
                    Dialog("Product name and competitor name should not be same.", "", e);
                    var combobox = $("#ProductName_ProductName").data("kendoComboBox");
                    combobox.clear();
                    swal.close();
                }
            }
            else {
                if (this.value() && this.selectedIndex == -1) {
                    var combobox = $("#ProductName_ProductName").data("kendoComboBox");
                    var ComboProductType = $("#ProductType_ProductType").data("kendoComboBox");
                    var ProductType = ComboProductType._prev;
                    if (ProductType === "") {
                        Dialog("Please select(input) product type", "", e);
                        combobox.clear();
                        ComboProductType.focus()
                    }
                    else {
                        kendo.ui.progress(combobox.wrapper, true);
                        Dialog("Do you want to add '" + e.sender._old + "' to product?", "epr", e);
                    }
                }
                else {
                    var autoCompleteProduct = $("#ProductName_ProductName").data("kendoComboBox").dataSource;
                    var comoData = autoCompleteProduct.data();
                    model.ProductName = e.sender.input.val();
                    var object = this.dataItem(this.select());
                    var prodId = object.ProductNamesId;
                    model.ProdId = prodId;
                    var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
                    var grid = $("#GridLeadProducts").data("kendoGrid");
                    var data = dataSource.data();
                    var price = 0;
                    var code = "";
                    data[0].ProductName = e.sender.input.val();
                    kendo.ui.progress(grid.wrapper, true);
                    $.ajax({
                        url: '@Url.Action("GetCompProdPrice", "Products")',
                        type: 'POST',
                        async: false,
                        data: { 'ProdId': prodId, "CompId": prodId },
                        success: function (price) {
                            $("#Price").val(price).attr("readonly", "readonly");
                            var qty = $('#Quantity').val();
                            var amt = price * qty;
                            data[0].Price = price;
                            data[0].Quantity = qty;
                            data[0].ProdId = prodId;
                            data[0].Amount = amt;
                            var DiscountType = $('#DiscountType_DiscountType').val();
                            var Dis = $('#Discount').val();
                            if (DiscountType == "1") {
                                amt = (amt - Dis);
                            }
                            else if (DiscountType == "2") {
                                amt = (amt - (amt * Dis / 100));
                            }
                            $('#Amount').val(amt).attr("readonly", "readonly").attr("class", "form-control k-textbox");
                            kendo.ui.progress(grid.wrapper, false);
                            model.Price = $("#Price").val();
                            model.DiscountType = $('#DiscountType_DiscountType').data("kendoDropDownList").text();
                            model.Qty = qty;
                            model.prodId = prodId;
                            model.Amount = amt;
                        },
                        error: function () {
                            kendo.ui.progress(grid.wrapper, false);
                        }
                    });
                }
            }
        }
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }
    </script>

    // Competitor
    <script>

        function BindComp1(typeId) {
            var grid = $("#GridLeadProducts").data("kendoGrid");
            kendo.ui.progress(grid.wrapper, true);
            var model = grid.editable.options.model;
            // var _objProducts = JSON.parse('@Html.Raw(Json.Encode(ViewData["ProductNames"]))');
            $("#Comp1Name_Comp1Name").kendoComboBox({
                dataValueField: "ProductNamesId",
                //dataSource    : _objProducts,
                dataTextField: "ProductName",
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Products/GetProductNamesByType?Type=" + typeId,
                            dataType: "json"
                        }
                    }
                },
                filter: "startswith",
                //value: model == null ? "null" : model.Comp1Name,
                suggest: true
            });
            var combobox = $("#Comp1Name_Comp1Name").data("kendoComboBox");
            combobox.bind("change", onChangeComp1);
            combobox.input.attr("placeholder", '@NIMBOLE.GlobalResources.Resources.SelectOrAdd').attr("minlength", "2").attr("maxlength", "100");
            kendo.ui.progress(grid.wrapper, false);
        }
        function Comp1Change() {
            var prodId = 0;
            var ProductTypeId = $("#ProductType_ProductType").val();
            var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
            var grid = $("#GridLeadProducts").data("kendoGrid");
            var model = grid.editable.options.model;
            var combobox = $("#Comp1Name_Comp1Name").data("kendoComboBox");
            var gridData = dataSource.data();
            $.ajax({
                url: '@Url.Action("CreateLeadProduct", "Products")',
                type: 'POST',
                async: false,
                data: { 'item': combobox._old, 'type': ProductTypeId },
                success: function (data) {
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "", "");
                        combobox.clear();
                        swal.close();
                        combobox.focus();
                    }
                    swal.close();
                    $("#Comp1Price").bind("change", Comp1ProdPrice);
                    _comp1productId = data.Data[data.Data.length - 1].Id;
                    gridData[0].Comp1ProdId = _comp1productId;
                    var comp1price = $("#Comp1Price").val();
                    model.Comp1Name = $("#Comp1Name_Comp1Name").val();
                    model.Comp1ProdId = gridData[0].Comp1ProdId;
                    model.Comp1Price = $("#Comp1Price").val();
                    $("#Comp1Price").val(comp1price).removeAttr("readonly");
                    $("#Comp1Price").val(" ");
                    //bindProductsCombo(ProductTypeId);
                    BindProducts(ProductTypeId);
                    BindComp1(ProductTypeId);
                    kendo.ui.progress(combobox.wrapper, false);
                    combobox.focus();
                },
                error: function () {
                    combobox.bind("change", onChangeComp1);
                    kendo.ui.progress(combobox.wrapper, false);
                }
            });
        }
        function onChangeComp1(e) {
            var grid = $("#GridLeadProducts").data("kendoGrid");
            var model = grid.editable.options.model;
            var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
            var gridData = dataSource.data;
            var ProductTypeId = $("#ProductType_ProductType").val();
            this.value($.trim(this.value()));
            //Checking whether Product Name and Competitor Name are Same
            if (model.ProductName === this.text()) {

                Dialog("Product name and competitor name should not be same.", "", e);
                var combobox = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                combobox.clear();
            }
            else {
                if (this.value() && this.selectedIndex == -1) {
                    var combobox = $("#Comp1Name_Comp1Name").data("kendoComboBox");
                    var ComboProductType = $("#ProductType_ProductType").data("kendoComboBox");
                    var ProductType = ComboProductType._prev;
                    if (ProductType === "") {
                        Dialog("Please select(input) product type", "");
                        combobox.clear();
                        ComboProductType.focus()
                        swal.close();
                    }
                    else {
                        Dialog("Do you want to add '" + e.sender._old + "'to competitor?", "cmp", e);
                    }
                }
                else {
                    var autoCompleteProduct = $("#Comp1Name_Comp1Name").data("kendoComboBox").dataSource;
                    var comoData = autoCompleteProduct.data();
                    model.Comp1Name = e.sender.input.val();
                    var prodId = e.sender.value();
                    model.Comp1ProdId = prodId;
                    var compId = e.sender.value();
                    var dataSource = $("#GridLeadProducts").data("kendoGrid").dataSource;
                    var grid = $("#GridLeadProducts").data("kendoGrid");
                    var data = dataSource.data();
                    var price = 0;
                    var code = "";
                    //data[0].Comp1Name = e.sender.input.val();
                    kendo.ui.progress(grid.wrapper, true);
                    if (model.Comp1ProdId != "") {
                        $.ajax({
                            url: '@Url.Action("GetCompProdPrice", "Products")',
                            type: 'POST',
                            async: false,
                            data: { 'ProdId': prodId, "CompId": prodId },
                            success: function (price) {
                                $("#Comp1Price").val(price).attr("readonly", "readonly").attr("class", "form-control k-textbox");
                                kendo.ui.progress(grid.wrapper, false);
                                model._comp1productId = prodId;
                                model.Comp1Price = price;
                            },
                            error: function () {
                                kendo.ui.progress(grid.wrapper, false);
                            }
                        });
                    }
                    else {
                        $("#Comp1Price").val("0");
                        model.Comp1Price = "0";
                    }
                    kendo.ui.progress(grid.wrapper, false);
                }
            }
        }
    </script>

    //LeadSource
    <script>

        function onLeadSourceRequestEnd(e) {
            if (e.type == "create" || e.type == "update") {
                $("#LeadSource").data("kendoComboBox").dataSource.read();
            }
        }
    </script>

    //Accounts
    <script>

        function onAccountsRequestEnd(e) {
            if (e.type == "create" || e.type == "update") {
                $("#Account").data("kendoComboBox").dataSource.read();
            }
        }
    </script>

    //ExternalContacts
    <script>
        function BindExtContact() {
            var grid = $("#GridExternalContacts").data("kendoGrid");
            console.log(grid);
            var model = grid.editable.options.model;
            $("#FullName_FullName").kendoComboBox({
                dataTextField: "FullName",
                dataValueField: "Id",
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Contacts/GetAllContactbyAccountId?id=" + $('#AccountId').val(),
                            dataType: "json"
                        }
                    }
                },
                filter: "startswith",
                value: model == null ? "null" : model.FullName.toString(),
                suggest: true
            });
            var combobox = $("#FullName_FullName").data("kendoComboBox");
            combobox.bind("change", onExtContactChange);
        }

        function extContactChange(e) {
            var combobox = $("#FullName_FullName").data("kendoComboBox");
            var accId = $('#AccountId').val();
            var workEmail = $("#WorkEmail_WorkEmail").val();
            var grid = $("#GridExternalContacts").data("kendoGrid");
            var model = grid.editable.options.model;
            var dataSource = grid.dataSource;
            var gridData = dataSource.data();
            if (validateEmail(null)) {
                var emailsCombo = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                var emailsData = emailsCombo.dataSource.data();
                var emails = $.grep(emailsData, function (e) { return e.WorkEmail == emailsCombo.input.val(); });
                if (emails.length == 0) {
                    $.ajax({
                        url: '@Url.Action("CreateLeadContact", "Contacts")',
                        type: 'POST',
                        async: false,
                        data: { 'item': combobox._old, 'accid': accId, 'email': emailsCombo.input.val() },
                        success: function (data) {
                            if (data.Total === 1 && data.Data[0].Id === 0) {
                                Dialog("Record already exist/inactive.", "", e);
                                combobox.clear();
                                ExtWorkEmail.clear();
                                ExtWorkEmail.focus();
                            }
                            else {
                                _contactId = data.Data[data.Data.length - 1].Id;
                                model.ExtContactId = _contactId;
                                gridData[0].FullName = combobox.input.val();
                                WorkEmail = $('#WorkEmail_WorkEmail').val();
                                $('#WorkEmail_WorkEmail').val(WorkEmail);
                                //model.WorkEmail = WorkEmail;
                                model.WorkEmail = data.Data[data.Data.length - 1].WorkEmail;
                                swal.close();
                            }
                            BindExtContact();
                            BindExtContactWorkMail();
                            combobox.bind("change", onExtContactChange);
                            kendo.ui.progress(combobox.wrapper, false);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            BindExtContact();
                            BindExtContactWorkMail();
                            combobox.bind("change", onExtContactChange);
                            kendo.ui.progress(combobox.wrapper, false);
                            Dialog(errorThrown, "", e);
                            $(".k-grid-toolbar #customExtContactCommand").show();
                            combobox.clear();
                            var workmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                            workmail.clear();
                            workmail.focus();
                        }
                    });
                }
                else {
                    Dialog("Duplicates not allowed", "", e);
                    $("#GridExternalContacts").data("kendoGrid").cancelChanges();
                    grid.dataSource.read();
                    kendo.ui.progress(grid.wrapper, false);
                }
            }
            else {
                combobox.clear();
                var workmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                workmail.clear();
                //workmail.focus();
                Dialog("Please enter valid email.", "", e);
                setTimeout(function () {
                    $('#dialogContent').focus();
                }, 1000);
            }
        }
        function onExtContactChange(e) {
            dirtyFlag = true;
            var FullName = $("#FullName_FullName").data("kendoComboBox").input.val();
            var combobox = $("#FullName_FullName").data("kendoComboBox");
            if (FullName != "") {
                this.value($.trim(this.value()));
                kendo.ui.progress(combobox.wrapper, true);
                var grid = $("#GridExternalContacts").data("kendoGrid");
                var model = grid.editable.options.model;
                var dataSource = $("#GridExternalContacts").data("kendoGrid").dataSource;
                var ExtWorkEmail = $('#WorkEmail_WorkEmail').data("kendoComboBox");
                var gridData = dataSource.data();
                if (this.value() && this.selectedIndex == -1) {
                    var combobox = $("#FullName_FullName").data("kendoComboBox");
                    var accId = $('#AccountId').val();
                    var workEmail = ExtWorkEmail._prev;
                    if (workEmail == "" || workEmail == undefined) {
                        var workmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                        workmail.focus();
                        Dialog("Please select(input) email.", "", e);
                        combobox.clear();
                        kendo.ui.progress(combobox.wrapper, false);
                    }
                    else {
                        Dialog("Do you want to add '" + e.sender._old + "' to contact?", "eco");
                    }
                }
                else {
                    var comboDataSource = $("#FullName_FullName").data("kendoComboBox").dataSource;
                    var comboData = comboDataSource.data();
                    model.FullName = e.sender.input.val();
                    _contactId = e.sender.value();
                    model.ExtContactId = _contactId;
                    if (ExtWorkEmail._selectedValue === _contactId) {
                    }
                    else {
                        var contact = $.grep(comboData, function (e) { return e.Id == parseInt(_contactId); });
                        ExtWorkEmail.text(contact[0].WorkEmail);
                    }
                    var ExtWorkEmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                    var workEmail = ExtWorkEmail._prev;
                    combobox._old = "";
                    model.WorkEmail = workEmail;
                    kendo.ui.progress(combobox.wrapper, false);
                }
            }
        }
    </script>

    //ExternalContactsWorkmail
    <script>
        function BindExtContactWorkMail() {
            var grid = $("#GridExternalContacts").data("kendoGrid");
            var model = grid.editable.options.model;
            $("#WorkEmail_WorkEmail").kendoComboBox({
                dataTextField: "WorkEmail",
                dataValueField: "Id",
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Contacts/GetAllContactbyAccountId?id=" + $('#AccountId').val(),
                            datatype: "json"
                        }
                    }
                },
                filter: "startswith",
                value: model == null ? "null" : model.WorkEmail.toString(),
                suggest: true
            });
            var combobox = $("#WorkEmail_WorkEmail").data("kendoComboBox");
            combobox.bind("change", onExtContactMailChange);
        }

        function onExtContactMailChange(e) {
            var ExtWorkEmail = $('#WorkEmail_WorkEmail').data("kendoComboBox").input.val();
            if (ExtWorkEmail != "") {
                var workmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                var extWorkmail = workmail._prev;
                if (extWorkmail != "") {
                    if (validateEmail(null)) {
                        this.value($.trim(this.value()));
                        //Changed = true;
                        var grid = $("#GridExternalContacts").data("kendoGrid");
                        var model = grid.editable.options.model;
                        var dataSource = $("#GridExternalContacts").data("kendoGrid").dataSource;
                        var gridData = dataSource.data();
                        if (this.value() && this.selectedIndex == -1) {
                            var fullName = $("#FullName_FullName").data("kendoComboBox");
                            contactName = fullName._prev;
                            if (contactName != "") {
                                fullName.clear();
                            }
                        }
                        else {
                            kendo.ui.progress(workmail.wrapper, true);
                            var comoboDataSource = $("#WorkEmail_WorkEmail").data("kendoComboBox").dataSource;
                            var comboData = comoboDataSource.data();
                            model.WorkEmail = e.sender.input.val();
                            var contactmaileId = e.sender.value();
                            var fullName = $("#FullName_FullName").data("kendoComboBox");
                            var contact = $.grep(comboData, function (e) { return e.WorkEmail == model.WorkEmail; });
                            fullName.text(contact[0].FullName);
                            model.ExtContactId = fullName._selectedValue;
                            var contactName = $("#FullName_FullName").data("kendoComboBox").input.val();
                            model.FullName = contactName;
                            var combobox = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                            combobox.bind("change", onExtContactMailChange);
                            _contactId = fullName._selectedValue;
                            model.ExtContactId = _contactId;
                            combobox._old = "";
                            kendo.ui.progress(workmail.wrapper, false);
                        }
                    }
                    else {
                        var workmail = $("#WorkEmail_WorkEmail").data("kendoComboBox");
                        workmail._pre = "";
                        workmail.clear();
                        workmail.focus();
                        Dialog("Please enter valid email.", "");
                    }
                }
            }
        }
    </script>

    //ExternalContactRoles
    <script>
        function BindExtContactRole() {
            var grid = $("#GridExternalContacts").data("kendoGrid");
            var model = grid.editable.options.model;
            $("#ExtContactRole_ExtContactRole").kendoComboBox({
                dataTextField: "Description",
                dataValueField: "Id",
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/ContactRoles/AllContactRole",
                            dataType: "json"
                        }
                    }
                },
                filter: "startswith",
                value: model == null ? "null" : model.ExtContactRole,
                suggest: true
            });
            var combobox = $("#ExtContactRole_ExtContactRole").data("kendoComboBox");
            combobox.bind("change", onExtContactRoleChange);
        }

        function extContactRoleChange() {
            var combobox = $("#ExtContactRole_ExtContactRole").data("kendoComboBox");
            var dataSource = $("#GridExternalContacts").data("kendoGrid").dataSource;
            var grid = $("#GridExternalContacts").data("kendoGrid");
            var gridData = dataSource.data();
            var model = grid.editable.options.model;
            $.ajax({
                url: '@Url.Action("CreateLeadContactRole", "ContactRoles")',
                type: 'POST',
                async: false,
                data: { item: combobox._old },
                success: function (data) {
                    if (data.Total === 1 && data.Data[0].Id === 0) {
                        Dialog("Record already exist/inactive.", "");
                        combobox.clear();
                        combobox.focus();
                        swal.close();
                    }
                    else {
                        swal.close();
                        _roleId = data.Data[data.Data.length - 1].Id;
                        gridData[0].ExtContactRoleId = _roleId;
                        model.ExtContactRoleId = _roleId;
                        var ContactRole = $('#ExtContactRole_ExtContactRole').val();
                        $('#ExtContactRole_ExtContactRole').val(ContactRole);
                        model.ExtContactRole = ContactRole;
                    }
                    BindExtContactRole();
                    combobox.bind("change", onExtContactRoleChange);
                    kendo.ui.progress(combobox.wrapper, false);
                },
                error: function () {
                    combobox.bind("change", onExtContactRoleChange);
                    kendo.ui.progress(combobox.wrapper, false);
                }
            });
        }
        function onExtContactRoleChange(e) {
            this.value($.trim(this.value()));
            var grid = $("#GridExternalContacts").data("kendoGrid");
            var model = grid.editable.options.model;
            $('#hdnExtContactRole').val(e.sender.value());
            if (this.value() && this.selectedIndex == -1) {
                var combobox = $("#ExtContactRole_ExtContactRole").data("kendoComboBox");
                kendo.ui.progress(combobox.wrapper, true);
                Dialog("Do you want to add '" + e.sender._old + "' to role?", "eecr");
            }
            else {
                model.ExtContactRoleId = e.sender.value();
                model.ExtContactRole = e.sender.input.val();
                _roleId = e.sender.value();
            }
        }
    </script>

    <script type="text/javascript">
        function ProdPrice() {
            var cb = $('#Price');
            //if (confirm("Do you want to add '" + cb[0].value + "' to Database.")) {
            var $post = $.post("/Products/EditById", { Id: _productId, iPrice: cb[0].value }, function (data) {
            });
            $post.success(function (data) {

            });
            //}
        }
        function onComp1ProductRequestEnd(e) {
            if (e.type == "create" || e.type == "update") {
                $("#Comp1Name").data("kendoComboBox").dataSource.read();
            }
        }
        function Comp1ProdPrice() {
            var cb = $('#Comp1Price');
            //if (confirm("Do you want to add '" + cb[0].value + "' to Database.")) {
            var $post = $.post("/Products/EditById", { Id: _comp1productId, iPrice: cb[0].value }, function (data) {
            });
            $post.success(function (data) {
            });
            //}
        }
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                Dialog(message, "");
            }
        }
    </script>

    <style>
        .k-grid tbody .k-button, .k-ie8 .k-grid tbody button.k-button {
            min-width: 0px !important;
        }

        .k-grid-edit-row td {
            height: 93px;
        }

        .k-callout {
            position: fixed !important;
        }

        .k-grid table td:last-child, .k-ie8 .k-grid table td:last-child {
            min-width: 102px;
        }
    </style>

    //Script for Validation
    <script>
        var listcontrols = {
            "LeadTitle": "true,allcharacters,1,100",
            "LeadSource": "true,select",
            "Account": "true,select"
        };

        $(document).ready(function () {
            $('#btnSubmit,#btnSubmit1').click(function (e) {
                if (listcontrols) {
                    var flag = 0;
                    var texttype = "";
                    $.each(listcontrols, function (key, value) {
                        texttype = value.split(',')[1];
                        var element = $('#' + key);
                        if (texttype == "select") {
                            if (typeof element.prev().attr('style') !== typeof undefined) {
                                element.prev().removeAttr("style");
                            }
                        }
                        if (validateControl(key, value.split(',')[0], value.split(',')[1], value.split(',')[2], value.split(',')[3]) == false) {
                            flag = flag + 1;
                        }
                    });
                    $('#LeadSource').attr("style", "width:100%;display:none;");
                    $('#Account').attr("style", "width:100%;display:none;");
                    if (flag != 0) {
                        return false;
                    }
                    else {

                        $('#hdnType').val(this.id);
                        $('form')[0].submit();
                    }
                }
            });
        });
    </script>
}
