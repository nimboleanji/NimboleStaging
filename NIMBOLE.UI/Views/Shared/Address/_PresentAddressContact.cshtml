@model NIMBOLE.Models.Models.TransAccConModel
@using Kendo.Mvc.UI;
@{
    var val = Json.Encode(Model);
}

@*Left Column*@
<div class="col-lg-6">
        <div class="form-group">
            <label for="InputHouseNo">
                @NIMBOLE.GlobalResources.Resources.HouseNo
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.HouseNo, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterHouseNo, @class = "form-control" })
        </div>
        <div class="form-group">
            <label for="InputCountry">
                @NIMBOLE.GlobalResources.Resources.Country
            </label>

            @(Html.Kendo().DropDownList()
                        .Name("CountryName")
                        .HtmlAttributes(new { @style = "width: 100%;" })
                        .OptionLabel(@NIMBOLE.GlobalResources.Resources.Select)
                        .DataTextField("CountryName")
                        .DataValueField("CountryId")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetCountryNames", "AddressAutoComplete");
                            });
                        })
            )
        </div>
        <div class="form-group">
            <label for="InputCity">
                @NIMBOLE.GlobalResources.Resources.City
            </label>

            @(Html.Kendo().DropDownList()
                              .Name("CityName")
                      .HtmlAttributes(new { @style = "width: 100%;" })
                      .OptionLabel(@NIMBOLE.GlobalResources.Resources.Select)
              .DataTextField("Name")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCityNames", "AddressAutoComplete")
                          .Data("filterCities");
                  })
                  .ServerFiltering(true);
              })
              .Enable(false)
              .AutoBind(false)
                      .CascadeFrom("StateName")
            )
            <script>
    debugger;
    function filterCities() {
        return {
            States: $("#StateName").val()
        };
    }
            </script>

            @*@Html.TextBoxFor(model => model.CityId, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterCity, @class = "form-control" })*@

        </div>
        <div class="form-group">
            <label for="InputPhone">
                @NIMBOLE.GlobalResources.Resources.OfficePhone
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.Phone, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterPhoneNo, @class = "form-control" })

        </div>
        <div class="form-group">
            <label for="InputHomePhone">
                @NIMBOLE.GlobalResources.Resources.HomePhone
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.HomePhone, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterHomePhoneNo, @class = "form-control" })

        </div>
        <div class="form-group">
            <label for="InputSkypeName">
                @NIMBOLE.GlobalResources.Resources.SkypeName
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.SkypeName, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterSkypeId, @class = "form-control" })

        </div>
</div>

@*Right Column*@
<div class="col-lg-6">
    <form role="form">
        <div class="form-group">
            <label for="InputStreet">
                @NIMBOLE.GlobalResources.Resources.Street
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.StreetName, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterStreet, @class = "form-control" })

        </div>
        <div class="form-group">
            <label for="InputState">
                @NIMBOLE.GlobalResources.Resources.State
            </label>
            @*@Html.TextBoxFor(model => model.State, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterStateName, @class = "form-control" })*@
            @(Html.Kendo().DropDownList()
                              .Name("StateName")
                      .HtmlAttributes(new { @style = "width: 100%;" })
                      .OptionLabel(@NIMBOLE.GlobalResources.Resources.Select)
              .DataTextField("Name")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetStateNames", "AddressAutoComplete")
                          .Data("filterStates");
                  })
                  .ServerFiltering(true);
              })
              .Enable(false)
              .AutoBind(false)
                              .CascadeFrom("CountryName")
            )
            <script>
    function filterStates() {
        return {
            Country: $("#CountryName").val()
        };
    }
            </script>

        </div>
        <div class="form-group">
            <label for="InputZip">
                @NIMBOLE.GlobalResources.Resources.ZipCode
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.ZipCode, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterZip, @class = "form-control" })

        </div>
        <div class="form-group">
            <label for="InputMobile">
                @NIMBOLE.GlobalResources.Resources.Mobile
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.Mobile, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterMobileNO, @class = "form-control" })

        </div>
        <div class="form-group">
            <label for="InputSecondaryFax">
                @NIMBOLE.GlobalResources.Resources.Fax
            </label>
            @Html.TextBoxFor(model => model.objAddressModel.Fax, new { @placeholder = @NIMBOLE.GlobalResources.Resources.EnterFax, @class = "form-control" })

        </div>
    </form>
</div>
