@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.common.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.common-bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.mobile.all.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.dataviz.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2014.3.1411/kendo.dataviz.bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/jszip.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.core.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.web.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2014.3.1411/kendo.aspnetmvc.min.js")"></script>
}

@using (Html.BeginForm())
{
    <main id="main-container">
        <!-- Page Content -->
        <div class="block-header bg-info">
            <h1 class="block-title">@NIMBOLE.GlobalResources.Resources.EmployeeTarget</h1>
        </div>

        <div class="block-content" id="Grid">
            @(Html.Kendo().Grid<NIMBOLE.Models.Models.EmployeeTargetModel>()
                                    .Name("GridEmployeeTarget")
                                    .Columns(columns =>
                                    {
                                        columns.Bound(e => e.Id).Title(@NIMBOLE.GlobalResources.Resources.Id).Hidden();
                                        columns.Bound(e => e.FinancialYear).Title(@NIMBOLE.GlobalResources.Resources.FinancialYear).EditorTemplateName("FinancialYear").Width(110);
                                        columns.Bound(e => e.Description).Title(@NIMBOLE.GlobalResources.Resources.Role).EditorTemplateName("EmployeeRole").Width(150);
                                        columns.Bound(e => e.Budget).Title(@NIMBOLE.GlobalResources.Resources.Target).Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;" }).Width(100);
                                        columns.Bound(e => e.TargetHike).Title("Target Hike(%)").Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;" }).Width(125);
                                        columns.Bound(e => e.IsAutomatic).Title(@NIMBOLE.GlobalResources.Resources.IsAutomatic).EditorTemplateName("EmployeeTargetIsAuto").ClientTemplate("#if(data.IsAutomatic){#" + "Yes" + "# } else {#" + "No" + "# }#").Width(100);
                                        columns.Bound(e => e.QuarterlyTarget).Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;" }).Title(@NIMBOLE.GlobalResources.Resources.Quarterly).Width(100);
                                        columns.Bound(e => e.MonthlyTarget).Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;" }).Title(@NIMBOLE.GlobalResources.Resources.Monthly).Width(100);
                                        columns.Bound(e => e.WeeklyTarget).Format("{0:N}").HtmlAttributes(new { @style = "text-align: right;" }).Title(@NIMBOLE.GlobalResources.Resources.Weekly).Width(100);
                                        columns.Command(command => { command.Edit().Text(" ").CancelText(" ").UpdateText(" ").HtmlAttributes(new { onclick = "return validateEntries(this)" }); }).Title(@NIMBOLE.GlobalResources.Resources.Actions).Width(120);
                                    })
                                    .ToolBar(toolbar => toolbar.Create().Text(@NIMBOLE.GlobalResources.Resources.Add).HtmlAttributes(new { id = "customEmpTargetCommand" }))
                                    .Editable(editable => { editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false); })
                                    .Pageable()
                                    .Scrollable(e => e.Enabled(true).Height("100%"))
                                    .Events(e => { e.DataBound("onEmployeeTargetDataBound"); e.Save("onSaveRecord"); })
                                    .DataSource(datasource => datasource
                                        .Ajax()
                                        .PageSize(20)
                                        .Sort(e => e.Add("FinancialYear"))
                                        .ServerOperation(false)
                                        .Model(model => model.Id(m => m.Id))
                                        .Events(events => events.Error("error_handler").RequestEnd("OnRequestEnd"))
                                        .Read(e => e.Action("GetAllEmployeeTargets", "EmployeeTarget"))
                                        .Create(e => e.Action("Create", "EmployeeTarget"))
                                        .Update(e => e.Action("Edit", "EmployeeTarget"))
                                        .Destroy(e => e.Action("Delete", "EmployeeTarget"))
                                    )
            )
        </div>

    </main>

    <script>
        var dataSource = {};
        var data = {};

        $('.k-grid-update').on("click", function () {
            $(this).addClass("k-state-disabled")
                .bind("click", disable = function (e) {
                    e.preventDefault();
                    return false;
                });
        });
        function onSaveRecord(e) {
            var grid = $("#GridEmployeeTarget").data("kendoGrid");
            this.editable.element.find(".k-grid-update").addClass("k-state-disabled").removeClass("k-grid-update");
            this.dataSource.one("requestEnd", function () {
                $("[data-role=grid] .k-grid-update").removeClass("k-state-disabled");
            })
            var currentFinancialYear = e.model.FinancialYear;
            var currentEmpRole = e.model.EmployeeRole;
            var data = this.dataSource.data();

            $.each(data, function (key, value) {
                if (value.FinancialYearId === 0 && value.EmployeeRoleId === 0) {
                    if (value.FinancialYear === currentFinancialYear && value.EmployeeRole === currentEmpRole && key != 0 && value.Id != 0) {
                        e.preventDefault();
                        alert("Duplicates not allowed");
                        var grid = $("#GridEmployeeTarget").data("kendoGrid");
                        grid.dataSource.read();
                    }
                }
                else {
                    if (value.FinancialYearId.toString() === currentFinancialYear && value.EmployeeRoleId.toString() === currentEmpRole && value.toString() != "0") {
                        e.preventDefault();
                        alert("Duplicates not allowed");
                        var grid = $("#GridEmployeeTarget").data("kendoGrid");
                        grid.dataSource.read();
                    }
                }
            });
        }
        function OnRequestEnd(e) {
            var grid = $("#GridEmployeeTarget").data("kendoGrid");
            kendo.ui.progress(grid.wrapper, true);
            if (e.type == "create") {
                grid.dataSource.read();
                kendo.ui.progress(grid.wrapper, false);
            }
            kendo.ui.progress(grid.wrapper, false);
        }
        $("#customEmpTargetCommand").click(function (e) {
            setTimeout(function () {
                var grid = $("#GridEmployeeTarget").data("kendoGrid");
                grid.tbody.find("tr[role='row']").each(function () {
                    $(this).find(".k-grid-edit").remove();
                    $(this).find(".k-grid-delete").remove();
                });
                //grid.pager.element.hide();
            }, 1000);
        });

        function validateEntries(e) {
            var grid = $("#GridEmployeeTarget").data("kendoGrid");
            kendo.ui.progress(grid.wrapper, true);
            e.setAttribute("style", "pointer-events:none");
            if (e.className.toString().split(' ').indexOf("k-grid-update") > -1) {
                var finYear = $('#FinancialYear').data('kendoDropDownList').text();
                var role = $('#EmployeeRole').data('kendoDropDownList').text();
                var budget = $('#Budget').val();
                var quarterly = $('#QuarterlyTarget').val();
                var monthly = $('#MonthlyTarget').val();
                var weekly = $('#WeeklyTarget').val();
                //if (finYear === "Select" || role === "Select" || budget === "0" || quarterly === "0" || monthly === "0" || weekly === "0") {
                //    e.preventDefault;
                    var grid = $("#GridEmployeeTarget").data("kendoGrid");
                    //grid.cancelChanges();
                    //kendo.ui.progress(grid.wrapper, false);
                //}
                kendo.ui.progress(grid.wrapper, false);
            }
            else if (e.className.toString().split(' ').indexOf("k-grid-edit") > -1) {
                var grid = $("#GridEmployeeTarget").data("kendoGrid");
                setTimeout(function () {
                    var grid = $("#GridEmployeeTarget").data("kendoGrid");
                    grid.tbody.find("tr[role='row']").each(function () {
                        $(this).find(".k-grid-edit").remove();
                        $(this).find(".k-grid-delete").remove();
                    });
                    var model = grid.editable.options.model;
                    $('#FinancialYear').data("kendoDropDownList").text(model.FinancialYear);
                    $('#EmployeeRole').data("kendoDropDownList").text(model.Description);
                    $("#FinancialYear").data("kendoDropDownList").enable(false);
                    $("#EmployeeRole").data("kendoDropDownList").enable(false);
                    $("#Budget,#TargetHike").attr("onChange", "TargetHIke();");
                }, 3000);
                kendo.ui.progress(grid.wrapper, false);
            }
            if (e.className.toString().split(' ').indexOf("k-grid-cancel") > -1) {
                kendo.ui.progress(grid.wrapper, true);
                var grid = $("#GridEmployeeTarget").data("kendoGrid");
                grid.dataSource.read();
                grid.pager.element.show();
                kendo.ui.progress(grid.wrapper, false);
            }
        }
        function TargetHIke() {
            var grid = $("#GridEmployeeTarget").data("kendoGrid");
            var target = parseInt($("#Budget").val());
            var hike = parseInt($("#TargetHike").val());
            if(isNaN(hike))
            {
                $("#TargetHike").val(0);
            }
            if (hike >= 0) {
                var disccount = parseInt(target * hike / 100);
                var ttarget = (target + disccount);
                $("#Budget").val(ttarget);
            }
            if (hike < 0) {
                var disccount = parseInt(target * hike / 100);
                var ttarget = (target + (disccount));
                $("#Budget").val(ttarget);
            }
            if ($("#ChckboxId").is(':checked')) {
                var Target = $("#Budget").val();
                var TargetHike = $("#TargetHike").val();
                var yTarget = Target / 4;
                var mTarget = Target / 12;
                var wTarget = Target / 52;
                yTarget = yTarget.toFixed(2);
                mTarget = mTarget.toFixed(2);
                wTarget = wTarget.toFixed(2);
                $('#QuarterlyTarget').val(yTarget).attr('readonly', 'readonly');
                $("#MonthlyTarget").val(mTarget).attr('readonly', 'readonly');
                $("#WeeklyTarget").val(wTarget).attr('readonly', 'readonly');

                var model = grid.editable.options.model;
                model.Budget = Target;
                model.MonthlyTarget = mTarget;
                model.QuarterlyTarget = yTarget;
                model.WeeklyTarget = wTarget;
                model.TargetHike = TargetHike;
            } else {
                model.TargetHike = TargetHike;
            }
        }
        function onEmployeeTargetDataBound(e) {
            var grid = $("#GridEmployeeTarget").data("kendoGrid");
            $("#GridEmployeeTarget tr.k-alt").removeClass("k-alt");
            //To Hide Edit buttons.
            grid.tbody.find("tr[role='row']").each(function () {
            });
            if (this.dataSource.view().length == 0) {
                var currentPage = this.dataSource.page();
                if (currentPage > 1) {
                    e.preventDefault();
                    this.dataSource.page(currentPage - 1);
                }
            }
        }
      
        function calculateTarget(e) {
            $('.k-grid-update').removeAttr("style");
            var grid = $("#GridEmployeeTarget").data("kendoGrid");
            var dataItem = grid.dataItem($(e.target).closest("tr"));
            if (dataItem.IsAutomatic) {
                var Target = $("#Budget").val();
                var yTarget = Target / 4;
                var mTarget = Target / 12;
                var wTarget = Target / 52;

                yTarget = yTarget.toFixed(2);
                mTarget = mTarget.toFixed(2);
                wTarget = wTarget.toFixed(2);

                dataItem.QuarterlyTarget = yTarget;
                dataItem.MonthlyTarget = mTarget;
                dataItem.WeeklyTarget = wTarget;

                $('#QuarterlyTarget').val(yTarget).attr('readonly', 'readonly');
                $("#MonthlyTarget").val(mTarget).attr('readonly', 'readonly');
                $("#WeeklyTarget").val(wTarget).attr('readonly', 'readonly');
            }
            else {
                $("#QuarterlyTarget").val(0).removeAttr('readonly');
                $("#MonthlyTarget").val(0).removeAttr('readonly');
                $("#WeeklyTarget").val(0).removeAttr('readonly');

                var QuarterlyTarget = $("#QuarterlyTarget").val();
                var MonthlyTarget = $("#MonthlyTarget").val();
                var WeeklyTarget = $("#WeeklyTarget").val();
                var Target = $("#Budget").val();
                var TargetHike = $("#TargetHike").val();
                var model = grid.editable.options.model;
                model.Budget = Target;
                model.MonthlyTarget = MonthlyTarget;
                model.QuarterlyTarget = QuarterlyTarget;
                model.WeeklyTarget = WeeklyTarget;
                model.TargetHike = TargetHike;
            }
        }
        $('#gridemployeetarget').on("change", "input[name = 'budget']", function (e) {
            calculatetarget(e);
        });

        $("#GridEmployeeTarget").on("change", "input[name='IsAutomatic']", function (e) {
            calculateTarget(e);
        });
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
       
        function onFinancialYearChange(e) {
        }
        function onEmployeeTargetChange(e) {
        }
    </script>
  
}

<style>
    .k-grid tbody .k-button, .k-ie8 .k-grid tbody button.k-button {
        min-width: 0px !important;
    }

    .k-grid table td:last-child, .k-ie8 .k-grid table td:last-child {
        min-width: 102px;
    }
</style>
